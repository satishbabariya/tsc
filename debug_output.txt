Detected host target triple: x86_64-pc-linux-gnu
Initializing LLVM targets...
Successfully initialized all LLVM targets
Discovering available targets from LLVM...
Discovered target: xtensa
Discovered target: m68k
Discovered target: xcore
Discovered target: x86-64
Discovered target: x86
Discovered target: wasm64
Discovered target: wasm32
Discovered target: ve
Discovered target: systemz
Discovered target: spirv
Discovered target: spirv64
Discovered target: spirv32
Discovered target: sparcel
Discovered target: sparcv9
Discovered target: sparc
Discovered target: riscv64
Discovered target: riscv32
Discovered target: ppc64le
Discovered target: ppc64
Discovered target: ppc32le
Discovered target: ppc32
Discovered target: nvptx64
Discovered target: nvptx
Discovered target: msp430
Discovered target: mips64el
Discovered target: mips64
Discovered target: mipsel
Discovered target: mips
Discovered target: loongarch64
Discovered target: loongarch32
Discovered target: lanai
Discovered target: hexagon
Discovered target: bpfeb
Discovered target: bpfel
Discovered target: bpf
Discovered target: avr
Discovered target: thumbeb
Discovered target: thumb
Discovered target: armeb
Discovered target: arm
'r600' is not a recognized processor for this target (ignoring processor)
'r600' is not a recognized processor for this target (ignoring processor)
Discovered target: amdgcn
'r600' is not a recognized processor for this target (ignoring processor)
'r600' is not a recognized processor for this target (ignoring processor)
Discovered target: r600
Discovered target: aarch64_32
Discovered target: aarch64_be
Discovered target: aarch64
Discovered target: arm64_32
Discovered target: arm64
Target registry initialized successfully with 47 targets
Supported targets: 47/47
DEBUG: SemanticAnalyzer created SymbolTable at address: 0x56237ca8d960
DEBUG: Created Infinity global variable with linkage: 0
[0] Starting lexical analysis
[1] Starting syntax analysis
DEBUG: Current token type: 1
DEBUG: Current token type: 1
DEBUG: Current token type: 1
DEBUG: Current token type: 1
DEBUG: Current token type: 1
DEBUG: Current token type: 1
DEBUG: Current token type: 1
DEBUG: Current token type: 1
DEBUG: Current token type: 95
DEBUG: Current token type: 1
DEBUG: Current token type: 1
DEBUG: Current token type: 1
[2] Starting semantic analysis
DEBUG: SymbolTable::lookupSymbol searching for 'processNumber' starting from scope 0x56237c9ae0b0
DEBUG: Scope::lookupSymbol searching for 'processNumber' in scope 0x56237c9ae0b0 (type: 0)
DEBUG: Found symbol 'processNumber' in scope 0x56237c9ae0b0
DEBUG: Found 'processNumber' in parent hierarchy
DEBUG: declareSymbol called for: T (kind: 10)
DEBUG: Symbol successfully declared: T
DEBUG: SymbolTable::lookupSymbol searching for 'T' starting from scope 0x56237cd39990
DEBUG: Scope::lookupSymbol searching for 'T' in scope 0x56237cd39990 (type: 2)
DEBUG: Found symbol 'T' in scope 0x56237cd39990
DEBUG: Found 'T' in parent hierarchy
DEBUG: resolveType looking up 'T': found
DEBUG: Symbol kind: 10
DEBUG: Symbol type: T
DEBUG: Symbol type kind: 23
DEBUG: SymbolTable::lookupSymbol searching for 'value' starting from scope 0x56237cd39d10
DEBUG: Scope::lookupSymbol searching for 'value' in scope 0x56237cd39d10 (type: 3)
DEBUG: Symbol not found in scope 0x56237cd39d10, searching parent scope 0x56237cd39990
DEBUG: Scope::lookupSymbol searching for 'value' in scope 0x56237cd39990 (type: 2)
DEBUG: Found symbol 'value' in scope 0x56237cd39990
DEBUG: Found 'value' in parent hierarchy
DEBUG: SymbolTable::lookupSymbol searching for 'processString' starting from scope 0x56237c9ae0b0
DEBUG: Scope::lookupSymbol searching for 'processString' in scope 0x56237c9ae0b0 (type: 0)
DEBUG: Found symbol 'processString' in scope 0x56237c9ae0b0
DEBUG: Found 'processString' in parent hierarchy
DEBUG: declareSymbol called for: T (kind: 10)
DEBUG: Symbol successfully declared: T
DEBUG: SymbolTable::lookupSymbol searching for 'T' starting from scope 0x56237cd39ea0
DEBUG: Scope::lookupSymbol searching for 'T' in scope 0x56237cd39ea0 (type: 2)
DEBUG: Found symbol 'T' in scope 0x56237cd39ea0
DEBUG: Found 'T' in parent hierarchy
DEBUG: resolveType looking up 'T': found
DEBUG: Symbol kind: 10
DEBUG: Symbol type: T
DEBUG: Symbol type kind: 23
DEBUG: SymbolTable::lookupSymbol searching for 'text' starting from scope 0x56237cd3a220
DEBUG: Scope::lookupSymbol searching for 'text' in scope 0x56237cd3a220 (type: 3)
DEBUG: Symbol not found in scope 0x56237cd3a220, searching parent scope 0x56237cd39ea0
DEBUG: Scope::lookupSymbol searching for 'text' in scope 0x56237cd39ea0 (type: 2)
DEBUG: Found symbol 'text' in scope 0x56237cd39ea0
DEBUG: Found 'text' in parent hierarchy
DEBUG: SymbolTable::lookupSymbol searching for 'processArray' starting from scope 0x56237c9ae0b0
DEBUG: Scope::lookupSymbol searching for 'processArray' in scope 0x56237c9ae0b0 (type: 0)
DEBUG: Found symbol 'processArray' in scope 0x56237c9ae0b0
DEBUG: Found 'processArray' in parent hierarchy
DEBUG: declareSymbol called for: T (kind: 10)
DEBUG: Symbol successfully declared: T
DEBUG: SymbolTable::lookupSymbol searching for 'T' starting from scope 0x56237cd3a300
DEBUG: Scope::lookupSymbol searching for 'T' in scope 0x56237cd3a300 (type: 2)
DEBUG: Found symbol 'T' in scope 0x56237cd3a300
DEBUG: Found 'T' in parent hierarchy
DEBUG: resolveType looking up 'T': found
DEBUG: Symbol kind: 10
DEBUG: Symbol type: T
DEBUG: Symbol type kind: 23
DEBUG: SymbolTable::lookupSymbol searching for 'items' starting from scope 0x56237cd3a690
DEBUG: Scope::lookupSymbol searching for 'items' in scope 0x56237cd3a690 (type: 3)
DEBUG: Symbol not found in scope 0x56237cd3a690, searching parent scope 0x56237cd3a300
DEBUG: Scope::lookupSymbol searching for 'items' in scope 0x56237cd3a300 (type: 2)
DEBUG: Found symbol 'items' in scope 0x56237cd3a300
DEBUG: Found 'items' in parent hierarchy
DEBUG: SymbolTable::lookupSymbol searching for 'processUnion' starting from scope 0x56237c9ae0b0
DEBUG: Scope::lookupSymbol searching for 'processUnion' in scope 0x56237c9ae0b0 (type: 0)
DEBUG: Found symbol 'processUnion' in scope 0x56237c9ae0b0
DEBUG: Found 'processUnion' in parent hierarchy
DEBUG: declareSymbol called for: T (kind: 10)
DEBUG: Symbol successfully declared: T
DEBUG: SymbolTable::lookupSymbol searching for 'T' starting from scope 0x56237cd3a770
DEBUG: Scope::lookupSymbol searching for 'T' in scope 0x56237cd3a770 (type: 2)
DEBUG: Found symbol 'T' in scope 0x56237cd3a770
DEBUG: Found 'T' in parent hierarchy
DEBUG: resolveType looking up 'T': found
DEBUG: Symbol kind: 10
DEBUG: Symbol type: T
DEBUG: Symbol type kind: 23
DEBUG: SymbolTable::lookupSymbol searching for 'value' starting from scope 0x56237cd3aad0
DEBUG: Scope::lookupSymbol searching for 'value' in scope 0x56237cd3aad0 (type: 3)
DEBUG: Symbol not found in scope 0x56237cd3aad0, searching parent scope 0x56237cd3a770
DEBUG: Scope::lookupSymbol searching for 'value' in scope 0x56237cd3a770 (type: 2)
DEBUG: Found symbol 'value' in scope 0x56237cd3a770
DEBUG: Found 'value' in parent hierarchy
DEBUG: SymbolTable::lookupSymbol searching for 'processMultiple' starting from scope 0x56237c9ae0b0
DEBUG: Scope::lookupSymbol searching for 'processMultiple' in scope 0x56237c9ae0b0 (type: 0)
DEBUG: Found symbol 'processMultiple' in scope 0x56237c9ae0b0
DEBUG: Found 'processMultiple' in parent hierarchy
DEBUG: declareSymbol called for: T (kind: 10)
DEBUG: Symbol successfully declared: T
DEBUG: declareSymbol called for: U (kind: 10)
DEBUG: Symbol successfully declared: U
DEBUG: SymbolTable::lookupSymbol searching for 'T' starting from scope 0x56237cd3abd0
DEBUG: Scope::lookupSymbol searching for 'T' in scope 0x56237cd3abd0 (type: 2)
DEBUG: Found symbol 'T' in scope 0x56237cd3abd0
DEBUG: Found 'T' in parent hierarchy
DEBUG: resolveType looking up 'T': found
DEBUG: Symbol kind: 10
DEBUG: Symbol type: T
DEBUG: Symbol type kind: 23
DEBUG: SymbolTable::lookupSymbol searching for 'U' starting from scope 0x56237cd3abd0
DEBUG: Scope::lookupSymbol searching for 'U' in scope 0x56237cd3abd0 (type: 2)
DEBUG: Found symbol 'U' in scope 0x56237cd3abd0
DEBUG: Found 'U' in parent hierarchy
DEBUG: resolveType looking up 'U': found
DEBUG: Symbol kind: 10
DEBUG: Symbol type: U
DEBUG: Symbol type kind: 23
DEBUG: SymbolTable::lookupSymbol searching for 'text' starting from scope 0x56237cd3b1e0
DEBUG: Scope::lookupSymbol searching for 'text' in scope 0x56237cd3b1e0 (type: 3)
DEBUG: Symbol not found in scope 0x56237cd3b1e0, searching parent scope 0x56237cd3abd0
DEBUG: Scope::lookupSymbol searching for 'text' in scope 0x56237cd3abd0 (type: 2)
DEBUG: Found symbol 'text' in scope 0x56237cd3abd0
DEBUG: Found 'text' in parent hierarchy
DEBUG: SymbolTable::lookupSymbol searching for 'numeric' starting from scope 0x56237cd3b1e0
DEBUG: Scope::lookupSymbol searching for 'numeric' in scope 0x56237cd3b1e0 (type: 3)
DEBUG: Symbol not found in scope 0x56237cd3b1e0, searching parent scope 0x56237cd3abd0
DEBUG: Scope::lookupSymbol searching for 'numeric' in scope 0x56237cd3abd0 (type: 2)
DEBUG: Found symbol 'numeric' in scope 0x56237cd3abd0
DEBUG: Found 'numeric' in parent hierarchy
DEBUG: SymbolTable::lookupSymbol searching for 'processComplex' starting from scope 0x56237c9ae0b0
DEBUG: Scope::lookupSymbol searching for 'processComplex' in scope 0x56237c9ae0b0 (type: 0)
DEBUG: Found symbol 'processComplex' in scope 0x56237c9ae0b0
DEBUG: Found 'processComplex' in parent hierarchy
DEBUG: declareSymbol called for: T (kind: 10)
DEBUG: Symbol successfully declared: T
DEBUG: declareSymbol called for: U (kind: 10)
DEBUG: Symbol successfully declared: U
DEBUG: SymbolTable::lookupSymbol searching for 'T' starting from scope 0x56237cd3b3e0
DEBUG: Scope::lookupSymbol searching for 'T' in scope 0x56237cd3b3e0 (type: 2)
DEBUG: Found symbol 'T' in scope 0x56237cd3b3e0
DEBUG: Found 'T' in parent hierarchy
DEBUG: resolveType looking up 'T': found
DEBUG: Symbol kind: 10
DEBUG: Symbol type: T
DEBUG: Symbol type kind: 23
DEBUG: SymbolTable::lookupSymbol searching for 'U' starting from scope 0x56237cd3b3e0
DEBUG: Scope::lookupSymbol searching for 'U' in scope 0x56237cd3b3e0 (type: 2)
DEBUG: Found symbol 'U' in scope 0x56237cd3b3e0
DEBUG: Found 'U' in parent hierarchy
DEBUG: resolveType looking up 'U': found
DEBUG: Symbol kind: 10
DEBUG: Symbol type: U
DEBUG: Symbol type kind: 23
DEBUG: SymbolTable::lookupSymbol searching for 'text' starting from scope 0x56237cd3b9a0
DEBUG: Scope::lookupSymbol searching for 'text' in scope 0x56237cd3b9a0 (type: 3)
DEBUG: Symbol not found in scope 0x56237cd3b9a0, searching parent scope 0x56237cd3b3e0
DEBUG: Scope::lookupSymbol searching for 'text' in scope 0x56237cd3b3e0 (type: 2)
DEBUG: Found symbol 'text' in scope 0x56237cd3b3e0
DEBUG: Found 'text' in parent hierarchy
DEBUG: SymbolTable::lookupSymbol searching for 'array' starting from scope 0x56237cd3b9a0
DEBUG: Scope::lookupSymbol searching for 'array' in scope 0x56237cd3b9a0 (type: 3)
DEBUG: Symbol not found in scope 0x56237cd3b9a0, searching parent scope 0x56237cd3b3e0
DEBUG: Scope::lookupSymbol searching for 'array' in scope 0x56237cd3b3e0 (type: 2)
DEBUG: Found symbol 'array' in scope 0x56237cd3b3e0
DEBUG: Found 'array' in parent hierarchy
DEBUG: SymbolTable::lookupSymbol searching for 'createArray' starting from scope 0x56237c9ae0b0
DEBUG: Scope::lookupSymbol searching for 'createArray' in scope 0x56237c9ae0b0 (type: 0)
DEBUG: Found symbol 'createArray' in scope 0x56237c9ae0b0
DEBUG: Found 'createArray' in parent hierarchy
DEBUG: declareSymbol called for: T (kind: 10)
DEBUG: Symbol successfully declared: T
DEBUG: SymbolTable::lookupSymbol searching for 'validateInput' starting from scope 0x56237c9ae0b0
DEBUG: Scope::lookupSymbol searching for 'validateInput' in scope 0x56237c9ae0b0 (type: 0)
DEBUG: Found symbol 'validateInput' in scope 0x56237c9ae0b0
DEBUG: Found 'validateInput' in parent hierarchy
DEBUG: declareSymbol called for: T (kind: 10)
DEBUG: Symbol successfully declared: T
DEBUG: SymbolTable::lookupSymbol searching for 'input' starting from scope 0x56237cd3c310
DEBUG: Scope::lookupSymbol searching for 'input' in scope 0x56237cd3c310 (type: 3)
DEBUG: Symbol not found in scope 0x56237cd3c310, searching parent scope 0x56237cd3bf70
DEBUG: Scope::lookupSymbol searching for 'input' in scope 0x56237cd3bf70 (type: 2)
DEBUG: Found symbol 'input' in scope 0x56237cd3bf70
DEBUG: Found 'input' in parent hierarchy
DEBUG: SymbolTable::lookupSymbol searching for 'processMatrix' starting from scope 0x56237c9ae0b0
DEBUG: Scope::lookupSymbol searching for 'processMatrix' in scope 0x56237c9ae0b0 (type: 0)
DEBUG: Found symbol 'processMatrix' in scope 0x56237c9ae0b0
DEBUG: Found 'processMatrix' in parent hierarchy
DEBUG: declareSymbol called for: T (kind: 10)
DEBUG: Symbol successfully declared: T
DEBUG: SymbolTable::lookupSymbol searching for 'T' starting from scope 0x56237cd3c4a0
DEBUG: Scope::lookupSymbol searching for 'T' in scope 0x56237cd3c4a0 (type: 2)
DEBUG: Found symbol 'T' in scope 0x56237cd3c4a0
DEBUG: Found 'T' in parent hierarchy
DEBUG: resolveType looking up 'T': found
DEBUG: Symbol kind: 10
DEBUG: Symbol type: T
DEBUG: Symbol type kind: 23
DEBUG: SymbolTable::lookupSymbol searching for 'matrix' starting from scope 0x56237cd3c890
DEBUG: Scope::lookupSymbol searching for 'matrix' in scope 0x56237cd3c890 (type: 3)
DEBUG: Symbol not found in scope 0x56237cd3c890, searching parent scope 0x56237cd3c4a0
DEBUG: Scope::lookupSymbol searching for 'matrix' in scope 0x56237cd3c4a0 (type: 2)
DEBUG: Found symbol 'matrix' in scope 0x56237cd3c4a0
DEBUG: Found 'matrix' in parent hierarchy
DEBUG: SymbolTable::lookupSymbol searching for 'processStringArray' starting from scope 0x56237c9ae0b0
DEBUG: Scope::lookupSymbol searching for 'processStringArray' in scope 0x56237c9ae0b0 (type: 0)
DEBUG: Found symbol 'processStringArray' in scope 0x56237c9ae0b0
DEBUG: Found 'processStringArray' in parent hierarchy
DEBUG: declareSymbol called for: T (kind: 10)
DEBUG: Symbol successfully declared: T
DEBUG: SymbolTable::lookupSymbol searching for 'T' starting from scope 0x56237cd3c9b0
DEBUG: Scope::lookupSymbol searching for 'T' in scope 0x56237cd3c9b0 (type: 2)
DEBUG: Found symbol 'T' in scope 0x56237cd3c9b0
DEBUG: Found 'T' in parent hierarchy
DEBUG: resolveType looking up 'T': found
DEBUG: Symbol kind: 10
DEBUG: Symbol type: T
DEBUG: Symbol type kind: 23
DEBUG: SymbolTable::lookupSymbol searching for 'strings' starting from scope 0x56237cd3cd30
DEBUG: Scope::lookupSymbol searching for 'strings' in scope 0x56237cd3cd30 (type: 3)
DEBUG: Symbol not found in scope 0x56237cd3cd30, searching parent scope 0x56237cd3c9b0
DEBUG: Scope::lookupSymbol searching for 'strings' in scope 0x56237cd3c9b0 (type: 2)
DEBUG: Found symbol 'strings' in scope 0x56237cd3c9b0
DEBUG: Found 'strings' in parent hierarchy
[3] Starting code generation
DEBUG: LLVMCodeGen received SymbolTable at address: 0x56237ca8d960
DEBUG: Module statement type: N3tsc19FunctionDeclarationE
DEBUG: Adding FunctionDeclaration to functionDecls
DEBUG: Module statement type: N3tsc19FunctionDeclarationE
DEBUG: Adding FunctionDeclaration to functionDecls
DEBUG: Module statement type: N3tsc19FunctionDeclarationE
DEBUG: Adding FunctionDeclaration to functionDecls
DEBUG: Module statement type: N3tsc19FunctionDeclarationE
DEBUG: Adding FunctionDeclaration to functionDecls
DEBUG: Module statement type: N3tsc19FunctionDeclarationE
DEBUG: Adding FunctionDeclaration to functionDecls
DEBUG: Module statement type: N3tsc19FunctionDeclarationE
DEBUG: Adding FunctionDeclaration to functionDecls
DEBUG: Module statement type: N3tsc19FunctionDeclarationE
DEBUG: Adding FunctionDeclaration to functionDecls
DEBUG: Module statement type: N3tsc19FunctionDeclarationE
DEBUG: Adding FunctionDeclaration to functionDecls
DEBUG: Module statement type: N3tsc19FunctionDeclarationE
DEBUG: Adding FunctionDeclaration to functionDecls
DEBUG: Module statement type: N3tsc19FunctionDeclarationE
DEBUG: Adding FunctionDeclaration to functionDecls
DEBUG: Processing 0 class declarations
DEBUG: Processing function declaration: processNumber
DEBUG: Current function context: null
DEBUG: Basic blocks after function creation:
DEBUG: Navigated to scope 0x56237cd39990 (type: 2, name: processNumber)
DEBUG: LLVMCodeGen navigated to function scope: processNumber at address: 0x56237cd39990
DEBUG: Current scope after navigation: 0x56237cd39990 (type: 2, name: processNumber)
DEBUG: Scope hierarchy for function processNumber:
  Level 0: 0x56237cd39990 (type: 2, name: processNumber)
  Level 1: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: Processing function body in generateFunctionBody
DEBUG: Basic blocks before function body processing:
DEBUG: Block 0x56237cd3e110 has terminator: NO
DEBUG: LLVMCodeGen processing block with current scope: 0x56237cd39990
DEBUG: Identifier visitor called for: value
DEBUG: loadVariable called for: value
DEBUG: loadVariable found storage for value: YES
DEBUG: Storage type for value: 14
DEBUG: Checking if storage is GlobalVariable for value
DEBUG: Storage value: 0x56237cd3e1b0
DEBUG: Storage is not a GlobalVariable for value
DEBUG: Storage type name: 14
DEBUG: LLVMCodeGen finished processing block with current scope: 0x56237cd39990
DEBUG: Finished processing function body in generateFunctionBody
DEBUG: Basic blocks after function body processing:
DEBUG: Block 0x56237cd3e110 has terminator: YES
DEBUG: Checking terminator after function body processing
DEBUG: Current block: 0x56237cd3e110
DEBUG: Current block has terminator: YES
DEBUG: Function already has terminator after body processing
DEBUG: About to check for terminator in generateFunctionBody
DEBUG: Function already has terminator
DEBUG: Checking all basic blocks in function processNumber
DEBUG: Block 0x56237cd3e110 has terminator: YES
DEBUG: Checking all basic blocks after ensuring terminators
DEBUG: Block 0x56237cd3e110 has terminator: YES
DEBUG: Popped scope, current scope: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: LLVMCodeGen finished processing function: processNumber with current scope: 0x56237c9ae0b0
DEBUG: Processing function declaration: processString
DEBUG: Current function context: null
DEBUG: Basic blocks after function creation:
DEBUG: Navigated to scope 0x56237cd39ea0 (type: 2, name: processString)
DEBUG: LLVMCodeGen navigated to function scope: processString at address: 0x56237cd39ea0
DEBUG: Current scope after navigation: 0x56237cd39ea0 (type: 2, name: processString)
DEBUG: Scope hierarchy for function processString:
  Level 0: 0x56237cd39ea0 (type: 2, name: processString)
  Level 1: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: Processing function body in generateFunctionBody
DEBUG: Basic blocks before function body processing:
DEBUG: Block 0x56237cd3fae0 has terminator: NO
DEBUG: LLVMCodeGen processing block with current scope: 0x56237cd39ea0
DEBUG: Identifier visitor called for: text
DEBUG: loadVariable called for: text
DEBUG: loadVariable found storage for text: YES
DEBUG: Storage type for text: 14
DEBUG: Checking if storage is GlobalVariable for text
DEBUG: Storage value: 0x56237cd3fb80
DEBUG: Storage is not a GlobalVariable for text
DEBUG: Storage type name: 14
DEBUG: LLVMCodeGen finished processing block with current scope: 0x56237cd39ea0
DEBUG: Finished processing function body in generateFunctionBody
DEBUG: Basic blocks after function body processing:
DEBUG: Block 0x56237cd3fae0 has terminator: YES
DEBUG: Checking terminator after function body processing
DEBUG: Current block: 0x56237cd3fae0
DEBUG: Current block has terminator: YES
DEBUG: Function already has terminator after body processing
DEBUG: About to check for terminator in generateFunctionBody
DEBUG: Function already has terminator
DEBUG: Checking all basic blocks in function processString
DEBUG: Block 0x56237cd3fae0 has terminator: YES
DEBUG: Checking all basic blocks after ensuring terminators
DEBUG: Block 0x56237cd3fae0 has terminator: YES
DEBUG: Popped scope, current scope: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: LLVMCodeGen finished processing function: processString with current scope: 0x56237c9ae0b0
DEBUG: Processing function declaration: processArray
DEBUG: Current function context: null
DEBUG: Basic blocks after function creation:
DEBUG: Navigated to scope 0x56237cd3a300 (type: 2, name: processArray)
DEBUG: LLVMCodeGen navigated to function scope: processArray at address: 0x56237cd3a300
DEBUG: Current scope after navigation: 0x56237cd3a300 (type: 2, name: processArray)
DEBUG: Scope hierarchy for function processArray:
  Level 0: 0x56237cd3a300 (type: 2, name: processArray)
  Level 1: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: Processing function body in generateFunctionBody
DEBUG: Basic blocks before function body processing:
DEBUG: Block 0x56237cd3fff0 has terminator: NO
DEBUG: LLVMCodeGen processing block with current scope: 0x56237cd3a300
DEBUG: Identifier visitor called for: items
DEBUG: loadVariable called for: items
DEBUG: loadVariable found storage for items: YES
DEBUG: Storage type for items: 14
DEBUG: Checking if storage is GlobalVariable for items
DEBUG: Storage value: 0x56237cd40090
DEBUG: Storage is not a GlobalVariable for items
DEBUG: Storage type name: 14
DEBUG: LLVMCodeGen finished processing block with current scope: 0x56237cd3a300
DEBUG: Finished processing function body in generateFunctionBody
DEBUG: Basic blocks after function body processing:
DEBUG: Block 0x56237cd3fff0 has terminator: YES
DEBUG: Checking terminator after function body processing
DEBUG: Current block: 0x56237cd3fff0
DEBUG: Current block has terminator: YES
DEBUG: Function already has terminator after body processing
DEBUG: About to check for terminator in generateFunctionBody
DEBUG: Function already has terminator
DEBUG: Checking all basic blocks in function processArray
DEBUG: Block 0x56237cd3fff0 has terminator: YES
DEBUG: Checking all basic blocks after ensuring terminators
DEBUG: Block 0x56237cd3fff0 has terminator: YES
DEBUG: Popped scope, current scope: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: LLVMCodeGen finished processing function: processArray with current scope: 0x56237c9ae0b0
DEBUG: Processing function declaration: processUnion
DEBUG: Current function context: null
DEBUG: Basic blocks after function creation:
DEBUG: Navigated to scope 0x56237cd3a770 (type: 2, name: processUnion)
DEBUG: LLVMCodeGen navigated to function scope: processUnion at address: 0x56237cd3a770
DEBUG: Current scope after navigation: 0x56237cd3a770 (type: 2, name: processUnion)
DEBUG: Scope hierarchy for function processUnion:
  Level 0: 0x56237cd3a770 (type: 2, name: processUnion)
  Level 1: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: Processing function body in generateFunctionBody
DEBUG: Basic blocks before function body processing:
DEBUG: Block 0x56237cd40500 has terminator: NO
DEBUG: LLVMCodeGen processing block with current scope: 0x56237cd3a770
DEBUG: Identifier visitor called for: value
DEBUG: loadVariable called for: value
DEBUG: loadVariable found storage for value: YES
DEBUG: Storage type for value: 14
DEBUG: Checking if storage is GlobalVariable for value
DEBUG: Storage value: 0x56237cd405a0
DEBUG: Storage is not a GlobalVariable for value
DEBUG: Storage type name: 14
DEBUG: LLVMCodeGen finished processing block with current scope: 0x56237cd3a770
DEBUG: Finished processing function body in generateFunctionBody
DEBUG: Basic blocks after function body processing:
DEBUG: Block 0x56237cd40500 has terminator: YES
DEBUG: Checking terminator after function body processing
DEBUG: Current block: 0x56237cd40500
DEBUG: Current block has terminator: YES
DEBUG: Function already has terminator after body processing
DEBUG: About to check for terminator in generateFunctionBody
DEBUG: Function already has terminator
DEBUG: Checking all basic blocks in function processUnion
DEBUG: Block 0x56237cd40500 has terminator: YES
DEBUG: Checking all basic blocks after ensuring terminators
DEBUG: Block 0x56237cd40500 has terminator: YES
DEBUG: Popped scope, current scope: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: LLVMCodeGen finished processing function: processUnion with current scope: 0x56237c9ae0b0
DEBUG: Processing function declaration: processMultiple
DEBUG: Current function context: null
DEBUG: getStringType() returning type: 14
DEBUG: Basic blocks after function creation:
DEBUG: Navigated to scope 0x56237cd3abd0 (type: 2, name: processMultiple)
DEBUG: LLVMCodeGen navigated to function scope: processMultiple at address: 0x56237cd3abd0
DEBUG: Current scope after navigation: 0x56237cd3abd0 (type: 2, name: processMultiple)
DEBUG: Scope hierarchy for function processMultiple:
  Level 0: 0x56237cd3abd0 (type: 2, name: processMultiple)
  Level 1: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: Processing function body in generateFunctionBody
DEBUG: Basic blocks before function body processing:
DEBUG: Block 0x56237cd40a60 has terminator: NO
DEBUG: LLVMCodeGen processing block with current scope: 0x56237cd3abd0
DEBUG: Identifier visitor called for: text
DEBUG: loadVariable called for: text
DEBUG: loadVariable found storage for text: YES
DEBUG: Storage type for text: 14
DEBUG: Checking if storage is GlobalVariable for text
DEBUG: Storage value: 0x56237cd40c50
DEBUG: Storage is not a GlobalVariable for text
DEBUG: Storage type name: 14
DEBUG: CallExpression visitor called
DEBUG: PropertyAccess visitor called for property: toString
DEBUG: PropertyAccess - object type: present
DEBUG: PropertyAccess - object class: N3tsc10IdentifierE
DEBUG: PropertyAccess - identifier name: numeric, property: toString
DEBUG: SymbolTable::lookupSymbol searching for 'numeric' starting from scope 0x56237cd3abd0
DEBUG: Scope::lookupSymbol searching for 'numeric' in scope 0x56237cd3abd0 (type: 2)
DEBUG: Found symbol 'numeric' in scope 0x56237cd3abd0
DEBUG: Found 'numeric' in parent hierarchy
DEBUG: Identifier visitor called for: numeric
DEBUG: loadVariable called for: numeric
DEBUG: loadVariable found storage for numeric: YES
DEBUG: Storage type for numeric: 14
DEBUG: Checking if storage is GlobalVariable for numeric
DEBUG: Storage value: 0x56237cd40b00
DEBUG: Storage is not a GlobalVariable for numeric
DEBUG: Storage type name: 14
DEBUG: PropertyAccess - objectValue type: pointer
DEBUG: PropertyAccess - current function: processMultiple
DEBUG: PropertyAccess - property name: toString
DEBUG: PropertyAccess - Not entering struct field access. functionName: processMultiple, propertyName: toString
DEBUG: PropertyAccess - objectValue type: pointer
DEBUG: PropertyAccess - objectValue type == getAnyType(): true
DEBUG: SymbolTable::lookupSymbol searching for 'numeric' starting from scope 0x56237cd3abd0
DEBUG: Scope::lookupSymbol searching for 'numeric' in scope 0x56237cd3abd0 (type: 2)
DEBUG: Found symbol 'numeric' in scope 0x56237cd3abd0
DEBUG: Found 'numeric' in parent hierarchy
DEBUG: SymbolTable::lookupSymbol searching for 'numeric' starting from scope 0x56237cd3abd0
DEBUG: Scope::lookupSymbol searching for 'numeric' in scope 0x56237cd3abd0 (type: 2)
DEBUG: Found symbol 'numeric' in scope 0x56237cd3abd0
DEBUG: Found 'numeric' in parent hierarchy
DEBUG: Found symbol numeric with type: T
DEBUG: Symbol type is not Generic, it's: 23
DEBUG: SymbolTable::lookupSymbol searching for 'numeric' starting from scope 0x56237cd3abd0
DEBUG: Scope::lookupSymbol searching for 'numeric' in scope 0x56237cd3abd0 (type: 2)
DEBUG: Found symbol 'numeric' in scope 0x56237cd3abd0
DEBUG: Found 'numeric' in parent hierarchy
DEBUG: Attempting generic method lookup for symbol: numeric with type: T
DEBUG: genericMethodLookup called for method: toString on type: T
DEBUG: createBuiltinMethodFunction called for: toString on type: T
DEBUG: getStringType() returning type: 14
DEBUG: Created toString function with parameter type: 14
DEBUG: Found generic method: toString
DEBUG: PropertyAccess visitor called for property: toString
DEBUG: PropertyAccess - object type: present
DEBUG: PropertyAccess - object class: N3tsc10IdentifierE
DEBUG: PropertyAccess - identifier name: numeric, property: toString
DEBUG: SymbolTable::lookupSymbol searching for 'numeric' starting from scope 0x56237cd3abd0
DEBUG: Scope::lookupSymbol searching for 'numeric' in scope 0x56237cd3abd0 (type: 2)
DEBUG: Found symbol 'numeric' in scope 0x56237cd3abd0
DEBUG: Found 'numeric' in parent hierarchy
DEBUG: Identifier visitor called for: numeric
DEBUG: loadVariable called for: numeric
DEBUG: loadVariable found storage for numeric: YES
DEBUG: Storage type for numeric: 14
DEBUG: Checking if storage is GlobalVariable for numeric
DEBUG: Storage value: 0x56237cd40b00
DEBUG: Storage is not a GlobalVariable for numeric
DEBUG: Storage type name: 14
DEBUG: PropertyAccess - objectValue type: pointer
DEBUG: PropertyAccess - current function: processMultiple
DEBUG: PropertyAccess - property name: toString
DEBUG: PropertyAccess - Not entering struct field access. functionName: processMultiple, propertyName: toString
DEBUG: PropertyAccess - objectValue type: pointer
DEBUG: PropertyAccess - objectValue type == getAnyType(): true
DEBUG: SymbolTable::lookupSymbol searching for 'numeric' starting from scope 0x56237cd3abd0
DEBUG: Scope::lookupSymbol searching for 'numeric' in scope 0x56237cd3abd0 (type: 2)
DEBUG: Found symbol 'numeric' in scope 0x56237cd3abd0
DEBUG: Found 'numeric' in parent hierarchy
DEBUG: SymbolTable::lookupSymbol searching for 'numeric' starting from scope 0x56237cd3abd0
DEBUG: Scope::lookupSymbol searching for 'numeric' in scope 0x56237cd3abd0 (type: 2)
DEBUG: Found symbol 'numeric' in scope 0x56237cd3abd0
DEBUG: Found 'numeric' in parent hierarchy
DEBUG: Found symbol numeric with type: T
DEBUG: Symbol type is not Generic, it's: 23
DEBUG: SymbolTable::lookupSymbol searching for 'numeric' starting from scope 0x56237cd3abd0
DEBUG: Scope::lookupSymbol searching for 'numeric' in scope 0x56237cd3abd0 (type: 2)
DEBUG: Found symbol 'numeric' in scope 0x56237cd3abd0
DEBUG: Found 'numeric' in parent hierarchy
DEBUG: Attempting generic method lookup for symbol: numeric with type: T
DEBUG: genericMethodLookup called for method: toString on type: T
DEBUG: createBuiltinMethodFunction called for: toString on type: T
DEBUG: Found existing function: toString
DEBUG: Found generic method: toString
DEBUG: CallExpression - Found function from PropertyAccess: toString
DEBUG: Identifier visitor called for: numeric
DEBUG: loadVariable called for: numeric
DEBUG: loadVariable found storage for numeric: YES
DEBUG: Storage type for numeric: 14
DEBUG: Checking if storage is GlobalVariable for numeric
DEBUG: Storage value: 0x56237cd40b00
DEBUG: Storage is not a GlobalVariable for numeric
DEBUG: Storage type name: 14
DEBUG: Identifier visitor called for: numeric
DEBUG: loadVariable called for: numeric
DEBUG: loadVariable found storage for numeric: YES
DEBUG: Storage type for numeric: 14
DEBUG: Checking if storage is GlobalVariable for numeric
DEBUG: Storage value: 0x56237cd40b00
DEBUG: Storage is not a GlobalVariable for numeric
DEBUG: Storage type name: 14
DEBUG: Prepended object instance as first argument for method call
DEBUG: Created non-void function call to toString
DEBUG: Function call generated in block: entry
DEBUG: getStringType() returning type: 14
DEBUG: getStringType() returning type: 14
DEBUG: getStringType() returning type: 14
DEBUG: getStringType() returning type: 14
DEBUG: getStringType() returning type: 14
DEBUG: LLVMCodeGen finished processing block with current scope: 0x56237cd3abd0
DEBUG: Finished processing function body in generateFunctionBody
DEBUG: Basic blocks after function body processing:
DEBUG: Block 0x56237cd40a60 has terminator: YES
DEBUG: Checking terminator after function body processing
DEBUG: Current block: 0x56237cd40a60
DEBUG: Current block has terminator: YES
DEBUG: Function already has terminator after body processing
DEBUG: About to check for terminator in generateFunctionBody
DEBUG: Function already has terminator
DEBUG: Checking all basic blocks in function processMultiple
DEBUG: Block 0x56237cd40a60 has terminator: YES
DEBUG: Checking all basic blocks after ensuring terminators
DEBUG: Block 0x56237cd40a60 has terminator: YES
DEBUG: Popped scope, current scope: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: LLVMCodeGen finished processing function: processMultiple with current scope: 0x56237c9ae0b0
DEBUG: Processing function declaration: processComplex
DEBUG: Current function context: null
DEBUG: getStringType() returning type: 14
DEBUG: Basic blocks after function creation:
DEBUG: Navigated to scope 0x56237cd3b3e0 (type: 2, name: processComplex)
DEBUG: LLVMCodeGen navigated to function scope: processComplex at address: 0x56237cd3b3e0
DEBUG: Current scope after navigation: 0x56237cd3b3e0 (type: 2, name: processComplex)
DEBUG: Scope hierarchy for function processComplex:
  Level 0: 0x56237cd3b3e0 (type: 2, name: processComplex)
  Level 1: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: Processing function body in generateFunctionBody
DEBUG: Basic blocks before function body processing:
DEBUG: Block 0x56237cd41700 has terminator: NO
DEBUG: LLVMCodeGen processing block with current scope: 0x56237cd3b3e0
DEBUG: Identifier visitor called for: text
DEBUG: loadVariable called for: text
DEBUG: loadVariable found storage for text: YES
DEBUG: Storage type for text: 14
DEBUG: Checking if storage is GlobalVariable for text
DEBUG: Storage value: 0x56237cd418c0
DEBUG: Storage is not a GlobalVariable for text
DEBUG: Storage type name: 14
DEBUG: CallExpression visitor called
DEBUG: PropertyAccess visitor called for property: toString
DEBUG: PropertyAccess - object type: present
DEBUG: PropertyAccess - object class: N3tsc14PropertyAccessE
DEBUG: PropertyAccess visitor called for property: length
DEBUG: PropertyAccess - object type: present
DEBUG: PropertyAccess - object class: N3tsc10IdentifierE
DEBUG: Identifier visitor called for: array
DEBUG: loadVariable called for: array
DEBUG: loadVariable found storage for array: YES
DEBUG: Storage type for array: 14
DEBUG: Checking if storage is GlobalVariable for array
DEBUG: Storage value: 0x56237cd417a0
DEBUG: Storage is not a GlobalVariable for array
DEBUG: Storage type name: 14
DEBUG: SymbolTable::lookupSymbol searching for 'array' starting from scope 0x56237cd3b3e0
DEBUG: Scope::lookupSymbol searching for 'array' in scope 0x56237cd3b3e0 (type: 2)
DEBUG: Found symbol 'array' in scope 0x56237cd3b3e0
DEBUG: Found 'array' in parent hierarchy
DEBUG: PropertyAccess - symbol lookup for 'array': found
DEBUG: PropertyAccess - symbol type: T
DEBUG: PropertyAccess - symbol type kind: 23
DEBUG: PropertyAccess - Found array type, accessing length field
DEBUG: PropertyAccess - arrayValue: valid
DEBUG: PropertyAccess - arrayValue type: 0x56237cd20460
DEBUG: PropertyAccess - Creating GEP for length field with struct type
DEBUG: PropertyAccess - arrayStructType: 0x56237cd20500
DEBUG: PropertyAccess - arrayValue: 0x56237cd41ae0
DEBUG: PropertyAccess - lengthPtr created: 0x56237cd425d0
DEBUG: PropertyAccess - lengthPtr type: 0x56237cd20460
DEBUG: PropertyAccess - Loading length value
DEBUG: PropertyAccess - arrayLength loaded: 0x56237cd42680
DEBUG: PropertyAccess - arrayLength type: 0x56237cd17930
DEBUG: PropertyAccess - Converting length to double
DEBUG: PropertyAccess - lengthAsDouble created: 0x56237cd42730
DEBUG: PropertyAccess - lengthAsDouble type: 0x56237cd17840
DEBUG: PropertyAccess - Setting current value and returning
DEBUG: PropertyAccess - objectValue type: not pointer
DEBUG: PropertyAccess - objectValue type == getAnyType(): false
DEBUG: PropertyAccess visitor called for property: toString
DEBUG: PropertyAccess - object type: present
DEBUG: PropertyAccess - object class: N3tsc14PropertyAccessE
DEBUG: PropertyAccess visitor called for property: length
DEBUG: PropertyAccess - object type: present
DEBUG: PropertyAccess - object class: N3tsc10IdentifierE
DEBUG: Identifier visitor called for: array
DEBUG: loadVariable called for: array
DEBUG: loadVariable found storage for array: YES
DEBUG: Storage type for array: 14
DEBUG: Checking if storage is GlobalVariable for array
DEBUG: Storage value: 0x56237cd417a0
DEBUG: Storage is not a GlobalVariable for array
DEBUG: Storage type name: 14
DEBUG: SymbolTable::lookupSymbol searching for 'array' starting from scope 0x56237cd3b3e0
DEBUG: Scope::lookupSymbol searching for 'array' in scope 0x56237cd3b3e0 (type: 2)
DEBUG: Found symbol 'array' in scope 0x56237cd3b3e0
DEBUG: Found 'array' in parent hierarchy
DEBUG: PropertyAccess - symbol lookup for 'array': found
DEBUG: PropertyAccess - symbol type: T
DEBUG: PropertyAccess - symbol type kind: 23
DEBUG: PropertyAccess - Found array type, accessing length field
DEBUG: PropertyAccess - arrayValue: valid
DEBUG: PropertyAccess - arrayValue type: 0x56237cd20460
DEBUG: PropertyAccess - Creating GEP for length field with struct type
DEBUG: PropertyAccess - arrayStructType: 0x56237cd20500
DEBUG: PropertyAccess - arrayValue: 0x56237cd43190
DEBUG: PropertyAccess - lengthPtr created: 0x56237cd43230
DEBUG: PropertyAccess - lengthPtr type: 0x56237cd20460
DEBUG: PropertyAccess - Loading length value
DEBUG: PropertyAccess - arrayLength loaded: 0x56237cd432e0
DEBUG: PropertyAccess - arrayLength type: 0x56237cd17930
DEBUG: PropertyAccess - Converting length to double
DEBUG: PropertyAccess - lengthAsDouble created: 0x56237cd43390
DEBUG: PropertyAccess - lengthAsDouble type: 0x56237cd17840
DEBUG: PropertyAccess - Setting current value and returning
DEBUG: PropertyAccess - objectValue type: not pointer
DEBUG: PropertyAccess - objectValue type == getAnyType(): false
DEBUG: PropertyAccess visitor called for property: length
DEBUG: PropertyAccess - object type: present
DEBUG: PropertyAccess - object class: N3tsc10IdentifierE
DEBUG: Identifier visitor called for: array
DEBUG: loadVariable called for: array
DEBUG: loadVariable found storage for array: YES
DEBUG: Storage type for array: 14
DEBUG: Checking if storage is GlobalVariable for array
DEBUG: Storage value: 0x56237cd417a0
DEBUG: Storage is not a GlobalVariable for array
DEBUG: Storage type name: 14
DEBUG: SymbolTable::lookupSymbol searching for 'array' starting from scope 0x56237cd3b3e0
DEBUG: Scope::lookupSymbol searching for 'array' in scope 0x56237cd3b3e0 (type: 2)
DEBUG: Found symbol 'array' in scope 0x56237cd3b3e0
DEBUG: Found 'array' in parent hierarchy
DEBUG: PropertyAccess - symbol lookup for 'array': found
DEBUG: PropertyAccess - symbol type: T
DEBUG: PropertyAccess - symbol type kind: 23
DEBUG: PropertyAccess - Found array type, accessing length field
DEBUG: PropertyAccess - arrayValue: valid
DEBUG: PropertyAccess - arrayValue type: 0x56237cd20460
DEBUG: PropertyAccess - Creating GEP for length field with struct type
DEBUG: PropertyAccess - arrayStructType: 0x56237cd20500
DEBUG: PropertyAccess - arrayValue: 0x56237cd435e0
DEBUG: PropertyAccess - lengthPtr created: 0x56237cd43680
DEBUG: PropertyAccess - lengthPtr type: 0x56237cd20460
DEBUG: PropertyAccess - Loading length value
DEBUG: PropertyAccess - arrayLength loaded: 0x56237cd43730
DEBUG: PropertyAccess - arrayLength type: 0x56237cd17930
DEBUG: PropertyAccess - Converting length to double
DEBUG: PropertyAccess - lengthAsDouble created: 0x56237cd437e0
DEBUG: PropertyAccess - lengthAsDouble type: 0x56237cd17840
DEBUG: PropertyAccess - Setting current value and returning
DEBUG: getStringType() returning type: 14
DEBUG: getStringType() returning type: 14
DEBUG: LLVMCodeGen finished processing block with current scope: 0x56237cd3b3e0
DEBUG: Finished processing function body in generateFunctionBody
DEBUG: Basic blocks after function body processing:
DEBUG: Block 0x56237cd41700 has terminator: YES
DEBUG: Checking terminator after function body processing
DEBUG: Current block: 0x56237cd41700
DEBUG: Current block has terminator: YES
DEBUG: Function already has terminator after body processing
DEBUG: About to check for terminator in generateFunctionBody
DEBUG: Function already has terminator
DEBUG: Checking all basic blocks in function processComplex
DEBUG: Block 0x56237cd41700 has terminator: YES
DEBUG: Checking all basic blocks after ensuring terminators
DEBUG: Block 0x56237cd41700 has terminator: YES
DEBUG: Popped scope, current scope: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: LLVMCodeGen finished processing function: processComplex with current scope: 0x56237c9ae0b0
DEBUG: Processing function declaration: createArray
DEBUG: Current function context: null
DEBUG: Basic blocks after function creation:
DEBUG: Navigated to scope 0x56237cd3bca0 (type: 2, name: createArray)
DEBUG: LLVMCodeGen navigated to function scope: createArray at address: 0x56237cd3bca0
DEBUG: Current scope after navigation: 0x56237cd3bca0 (type: 2, name: createArray)
DEBUG: Scope hierarchy for function createArray:
  Level 0: 0x56237cd3bca0 (type: 2, name: createArray)
  Level 1: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: Processing function body in generateFunctionBody
DEBUG: Basic blocks before function body processing:
DEBUG: Block 0x56237cd43b80 has terminator: NO
DEBUG: LLVMCodeGen processing block with current scope: 0x56237cd3bca0
DEBUG: ArrayLiteral visitor called with 0 elements
DEBUG: LLVMCodeGen finished processing block with current scope: 0x56237cd3bca0
DEBUG: Finished processing function body in generateFunctionBody
DEBUG: Basic blocks after function body processing:
DEBUG: Block 0x56237cd43b80 has terminator: YES
DEBUG: Checking terminator after function body processing
DEBUG: Current block: 0x56237cd43b80
DEBUG: Current block has terminator: YES
DEBUG: Function already has terminator after body processing
DEBUG: About to check for terminator in generateFunctionBody
DEBUG: Function already has terminator
DEBUG: Checking all basic blocks in function createArray
DEBUG: Block 0x56237cd43b80 has terminator: YES
DEBUG: Checking all basic blocks after ensuring terminators
DEBUG: Block 0x56237cd43b80 has terminator: YES
DEBUG: Popped scope, current scope: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: LLVMCodeGen finished processing function: createArray with current scope: 0x56237c9ae0b0
DEBUG: Processing function declaration: validateInput
DEBUG: Current function context: null
DEBUG: Basic blocks after function creation:
DEBUG: Navigated to scope 0x56237cd3bf70 (type: 2, name: validateInput)
DEBUG: LLVMCodeGen navigated to function scope: validateInput at address: 0x56237cd3bf70
DEBUG: Current scope after navigation: 0x56237cd3bf70 (type: 2, name: validateInput)
DEBUG: Scope hierarchy for function validateInput:
  Level 0: 0x56237cd3bf70 (type: 2, name: validateInput)
  Level 1: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: Processing function body in generateFunctionBody
DEBUG: Basic blocks before function body processing:
DEBUG: Block 0x56237cd440b0 has terminator: NO
DEBUG: LLVMCodeGen processing block with current scope: 0x56237cd3bf70
DEBUG: PropertyAccess visitor called for property: length
DEBUG: PropertyAccess - object type: present
DEBUG: PropertyAccess - object class: N3tsc10IdentifierE
DEBUG: Identifier visitor called for: input
DEBUG: loadVariable called for: input
DEBUG: loadVariable found storage for input: YES
DEBUG: Storage type for input: 14
DEBUG: Checking if storage is GlobalVariable for input
DEBUG: Storage value: 0x56237cd44150
DEBUG: Storage is not a GlobalVariable for input
DEBUG: Storage type name: 14
DEBUG: SymbolTable::lookupSymbol searching for 'input' starting from scope 0x56237cd3bf70
DEBUG: Scope::lookupSymbol searching for 'input' in scope 0x56237cd3bf70 (type: 2)
DEBUG: Found symbol 'input' in scope 0x56237cd3bf70
DEBUG: Found 'input' in parent hierarchy
DEBUG: PropertyAccess - symbol lookup for 'input': found
DEBUG: PropertyAccess - symbol type: T[]
DEBUG: PropertyAccess - symbol type kind: 9
DEBUG: PropertyAccess - Found array type, accessing length field
DEBUG: PropertyAccess - arrayValue: valid
DEBUG: PropertyAccess - arrayValue type: 0x56237cd20460
DEBUG: PropertyAccess - Creating GEP for length field with struct type
DEBUG: PropertyAccess - arrayStructType: 0x56237cd20500
DEBUG: PropertyAccess - arrayValue: 0x56237cd44310
DEBUG: PropertyAccess - lengthPtr created: 0x56237cd443b0
DEBUG: PropertyAccess - lengthPtr type: 0x56237cd20460
DEBUG: PropertyAccess - Loading length value
DEBUG: PropertyAccess - arrayLength loaded: 0x56237cd44460
DEBUG: PropertyAccess - arrayLength type: 0x56237cd17930
DEBUG: PropertyAccess - Converting length to double
DEBUG: PropertyAccess - lengthAsDouble created: 0x56237cd44510
DEBUG: PropertyAccess - lengthAsDouble type: 0x56237cd17840
DEBUG: PropertyAccess - Setting current value and returning
DEBUG: LLVMCodeGen finished processing block with current scope: 0x56237cd3bf70
DEBUG: Finished processing function body in generateFunctionBody
DEBUG: Basic blocks after function body processing:
DEBUG: Block 0x56237cd440b0 has terminator: YES
DEBUG: Checking terminator after function body processing
DEBUG: Current block: 0x56237cd440b0
DEBUG: Current block has terminator: YES
DEBUG: Function already has terminator after body processing
DEBUG: About to check for terminator in generateFunctionBody
DEBUG: Function already has terminator
DEBUG: Checking all basic blocks in function validateInput
DEBUG: Block 0x56237cd440b0 has terminator: YES
DEBUG: Checking all basic blocks after ensuring terminators
DEBUG: Block 0x56237cd440b0 has terminator: YES
DEBUG: Popped scope, current scope: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: LLVMCodeGen finished processing function: validateInput with current scope: 0x56237c9ae0b0
DEBUG: Processing function declaration: processMatrix
DEBUG: Current function context: null
DEBUG: Basic blocks after function creation:
DEBUG: Navigated to scope 0x56237cd3c4a0 (type: 2, name: processMatrix)
DEBUG: LLVMCodeGen navigated to function scope: processMatrix at address: 0x56237cd3c4a0
DEBUG: Current scope after navigation: 0x56237cd3c4a0 (type: 2, name: processMatrix)
DEBUG: Scope hierarchy for function processMatrix:
  Level 0: 0x56237cd3c4a0 (type: 2, name: processMatrix)
  Level 1: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: Processing function body in generateFunctionBody
DEBUG: Basic blocks before function body processing:
DEBUG: Block 0x56237cd451d0 has terminator: NO
DEBUG: LLVMCodeGen processing block with current scope: 0x56237cd3c4a0
DEBUG: Identifier visitor called for: matrix
DEBUG: loadVariable called for: matrix
DEBUG: loadVariable found storage for matrix: YES
DEBUG: Storage type for matrix: 14
DEBUG: Checking if storage is GlobalVariable for matrix
DEBUG: Storage value: 0x56237cd45270
DEBUG: Storage is not a GlobalVariable for matrix
DEBUG: Storage type name: 14
DEBUG: LLVMCodeGen finished processing block with current scope: 0x56237cd3c4a0
DEBUG: Finished processing function body in generateFunctionBody
DEBUG: Basic blocks after function body processing:
DEBUG: Block 0x56237cd451d0 has terminator: YES
DEBUG: Checking terminator after function body processing
DEBUG: Current block: 0x56237cd451d0
DEBUG: Current block has terminator: YES
DEBUG: Function already has terminator after body processing
DEBUG: About to check for terminator in generateFunctionBody
DEBUG: Function already has terminator
DEBUG: Checking all basic blocks in function processMatrix
DEBUG: Block 0x56237cd451d0 has terminator: YES
DEBUG: Checking all basic blocks after ensuring terminators
DEBUG: Block 0x56237cd451d0 has terminator: YES
DEBUG: Popped scope, current scope: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: LLVMCodeGen finished processing function: processMatrix with current scope: 0x56237c9ae0b0
DEBUG: Processing function declaration: processStringArray
DEBUG: Current function context: null
DEBUG: Basic blocks after function creation:
DEBUG: Navigated to scope 0x56237cd3c9b0 (type: 2, name: processStringArray)
DEBUG: LLVMCodeGen navigated to function scope: processStringArray at address: 0x56237cd3c9b0
DEBUG: Current scope after navigation: 0x56237cd3c9b0 (type: 2, name: processStringArray)
DEBUG: Scope hierarchy for function processStringArray:
  Level 0: 0x56237cd3c9b0 (type: 2, name: processStringArray)
  Level 1: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: Processing function body in generateFunctionBody
DEBUG: Basic blocks before function body processing:
DEBUG: Block 0x56237cd45720 has terminator: NO
DEBUG: LLVMCodeGen processing block with current scope: 0x56237cd3c9b0
DEBUG: Identifier visitor called for: strings
DEBUG: loadVariable called for: strings
DEBUG: loadVariable found storage for strings: YES
DEBUG: Storage type for strings: 14
DEBUG: Checking if storage is GlobalVariable for strings
DEBUG: Storage value: 0x56237cd457c0
DEBUG: Storage is not a GlobalVariable for strings
DEBUG: Storage type name: 14
DEBUG: LLVMCodeGen finished processing block with current scope: 0x56237cd3c9b0
DEBUG: Finished processing function body in generateFunctionBody
DEBUG: Basic blocks after function body processing:
DEBUG: Block 0x56237cd45720 has terminator: YES
DEBUG: Checking terminator after function body processing
DEBUG: Current block: 0x56237cd45720
DEBUG: Current block has terminator: YES
DEBUG: Function already has terminator after body processing
DEBUG: About to check for terminator in generateFunctionBody
DEBUG: Function already has terminator
DEBUG: Checking all basic blocks in function processStringArray
DEBUG: Block 0x56237cd45720 has terminator: YES
DEBUG: Checking all basic blocks after ensuring terminators
DEBUG: Block 0x56237cd45720 has terminator: YES
DEBUG: Popped scope, current scope: 0x56237c9ae0b0 (type: 0, name: global)
DEBUG: LLVMCodeGen finished processing function: processStringArray with current scope: 0x56237c9ae0b0
DEBUG: Starting LLVM IR verification...
DEBUG: Module has 13 functions
DEBUG: Verification result: PASSED
DEBUG: LLVM IR verification passed
DEBUG: LLVM IR dumped to generated_ir.ll
tests/generic_function_constraints_simple_test.ts:40:23: warning: Unused validateInput: function of type (input: T[]) => boolean
tests/generic_function_constraints_simple_test.ts:50:28: warning: Unused processStringArray: function of type (strings: T) => T
tests/generic_function_constraints_simple_test.ts:35:21: warning: Unused createArray: function of type () => T[]
tests/generic_function_constraints_simple_test.ts:20:22: warning: Unused processUnion: function of type (value: T) => T
tests/generic_function_constraints_simple_test.ts:30:24: warning: Unused processComplex: function of type (array: T, text: U) => string
tests/generic_function_constraints_simple_test.ts:25:25: warning: Unused processMultiple: function of type (numeric: T, text: U) => string
tests/generic_function_constraints_simple_test.ts:10:23: warning: Unused processString: function of type (text: T) => T
tests/generic_function_constraints_simple_test.ts:5:23: warning: Unused processNumber: function of type (value: T) => T
warning: Unused NaN: variable of type number
tests/generic_function_constraints_simple_test.ts:45:23: warning: Unused processMatrix: function of type (matrix: T) => T
tests/generic_function_constraints_simple_test.ts:15:22: warning: Unused processArray: function of type (items: T) => T
warning: Unused Infinity: variable of type number
warning: Unused console: variable of type {}
tests/generic_function_constraints_simple_test.ts:5:25: warning: Unused T:  of type T
tests/generic_function_constraints_simple_test.ts:10:25: warning: Unused T:  of type T
tests/generic_function_constraints_simple_test.ts:15:24: warning: Unused T:  of type T
tests/generic_function_constraints_simple_test.ts:20:24: warning: Unused T:  of type T
tests/generic_function_constraints_simple_test.ts:25:45: warning: Unused U:  of type U
tests/generic_function_constraints_simple_test.ts:25:27: warning: Unused T:  of type T
tests/generic_function_constraints_simple_test.ts:30:46: warning: Unused U:  of type U
tests/generic_function_constraints_simple_test.ts:30:26: warning: Unused T:  of type T
tests/generic_function_constraints_simple_test.ts:35:23: warning: Unused T:  of type T
tests/generic_function_constraints_simple_test.ts:40:25: warning: Unused T:  of type T
tests/generic_function_constraints_simple_test.ts:45:25: warning: Unused T:  of type T
tests/generic_function_constraints_simple_test.ts:50:30: warning: Unused T:  of type T
error: LLVM module verification failed: GEP base pointer is not a vector or a vector of pointers
  %property_ptr = getelementptr double, double %length.double, i32 0
Load operand must be a pointer.
  %property_value = load double, double %property_ptr, align 8
GEP base pointer is not a vector or a vector of pointers
  %property_ptr7 = getelementptr double, double %length.double6, i32 0
Load operand must be a pointer.
  %property_value8 = load double, double %property_ptr7, align 8
Call parameter type does not match function signature!
  %length.double12 = sitofp i32 %array.length11 to double
 ptr  %method_call_result = call ptr @toString(double %length.double12)

Compilation failed: Code generation failed

Compilation summary: 1 error(s), 25 warning(s)
