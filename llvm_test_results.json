[
  {
    "file": "tests/unit/minimal_generic_test.ts",
    "compilation": {
      "file": "tests/unit/minimal_generic_test.ts",
      "success": true,
      "stdout": "Detected host target triple: x86_64-pc-linux-gnu\nInitializing LLVM targets...\nSuccessfully initialized all LLVM targets\nDiscovering available targets from LLVM...\nDiscovered target: xtensa\nDiscovered target: m68k\nDiscovered target: xcore\nDiscovered target: x86-64\nDiscovered target: x86\nDiscovered target: wasm64\nDiscovered target: wasm32\nDiscovered target: ve\nDiscovered target: systemz\nDiscovered target: spirv\nDiscovered target: spirv64\nDiscovered target: spirv32\nDiscovered target: sparcel\nDiscovered target: sparcv9\nDiscovered target: sparc\nDiscovered target: riscv64\nDiscovered target: riscv32\nDiscovered target: ppc64le\nDiscovered target: ppc64\nDiscovered target: ppc32le\nDiscovered target: ppc32\nDiscovered target: nvptx64\nDiscovered target: nvptx\nDiscovered target: msp430\nDiscovered target: mips64el\nDiscovered target: mips64\nDiscovered target: mipsel\nDiscovered target: mips\nDiscovered target: loongarch64\nDiscovered target: loongarch32\nDiscovered target: lanai\nDiscovered target: hexagon\nDiscovered target: bpfeb\nDiscovered target: bpfel\nDiscovered target: bpf\nDiscovered target: avr\nDiscovered target: thumbeb\nDiscovered target: thumb\nDiscovered target: armeb\nDiscovered target: arm\nDiscovered target: amdgcn\nDiscovered target: r600\nDiscovered target: aarch64_32\nDiscovered target: aarch64_be\nDiscovered target: aarch64\nDiscovered target: arm64_32\nDiscovered target: arm64\nTarget registry initialized successfully with 47 targets\nSupported targets: 47/47\nDEBUG: Created ModuleSymbolManager\nDEBUG: SemanticAnalyzer created SymbolTable at address: 0x555b4ab559e0\nDEBUG: Created Infinity global variable with linkage: 0\n[0] Starting lexical analysis\n[1] Starting syntax analysis\nDEBUG: Parser::parse() called with 66 tokens for file: tests/unit/minimal_generic_test.ts\nDEBUG: Parser::parseModule() called\nDEBUG: Starting parseModule loop, isAtEnd(): 0\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Parser found constructor method\nDEBUG: Parser parsed constructor with 1 parameters\nDEBUG: parseStatement() called\nDEBUG: Current token type: 35\nDEBUG: Current token type: 1\nDEBUG: Parser parsed constructor body\nDEBUG: Parser found method declaration: getValue\nDEBUG: parseStatement() called\nDEBUG: Current token type: 35\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(instance)\nDEBUG: Current token type: 31\nDEBUG: Current token type: 1\nDEBUG: Parser found type arguments in NewExpression\nDEBUG: Parsed 1 type arguments\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(result)\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\n[2] Starting semantic analysis\nDEBUG: *** ANALYZE METHOD CALLED *** for module\nDEBUG: *** CALLING performSymbolResolution ***\nDEBUG: *** performSymbolResolution CALLED ***\nDEBUG: collectFunctionDeclarations found 4 statements\nDEBUG: Processing statement type: N3tsc16ClassDeclarationE\nDEBUG: declareSymbol called for: SimpleGeneric (kind: 3)\nDEBUG: Symbol successfully declared: SimpleGeneric\nDEBUG: Processing statement type: N3tsc19VariableDeclarationE\nDEBUG: Processing statement type: N3tsc19VariableDeclarationE\nDEBUG: Processing statement type: N3tsc19ExpressionStatementE\nDEBUG: *** CALLING module.accept(*this) ***\nDEBUG: SymbolTable::lookupSymbol searching for 'SimpleGeneric' starting from scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for 'SimpleGeneric' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol 'SimpleGeneric' in scope 0x555b4aa760b0\nDEBUG: Found 'SimpleGeneric' in parent hierarchy\nDEBUG: Processing type parameter: T\nDEBUG: Current scope when adding type parameter: 0x555b4adf1840\nDEBUG: Declaring type parameter symbol: T\nDEBUG: declareSymbol called for: T (kind: 10)\nDEBUG: Symbol successfully declared: T\nDEBUG: ClassDeclaration - processing 1 properties\nDEBUG: Processing property: value\nDEBUG: Current scope when processing property: 0x555b4adf1840\nDEBUG: PropertyDeclaration resolving type: T\nDEBUG: PropertyDeclaration type kind: 12\nDEBUG: SymbolTable::lookupSymbol searching for 'T' starting from scope 0x555b4adf1840\nDEBUG: Scope::lookupSymbol searching for 'T' in scope 0x555b4adf1840 (type: 4)\nDEBUG: Found symbol 'T' in scope 0x555b4adf1840\nDEBUG: Found 'T' in parent hierarchy\nDEBUG: resolveType looking up 'T': found\nDEBUG: Symbol kind: 10\nDEBUG: Symbol type: T\nDEBUG: Symbol type kind: 23\nDEBUG: resolveType returning resolved type: T (kind: 23)\nDEBUG: PropertyDeclaration resolved type: T\nDEBUG: PropertyDeclaration resolved type kind: 23\nDEBUG: Property processed successfully\nDEBUG: declareSymbol called for: value (kind: 8)\nDEBUG: Symbol successfully declared: value\nDEBUG: Processing constructor method\nDEBUG: SymbolTable::lookupSymbol searching for 'T' starting from scope 0x555b4adf5ec0\nDEBUG: Scope::lookupSymbol searching for 'T' in scope 0x555b4adf5ec0 (type: 2)\nDEBUG: Symbol not found in scope 0x555b4adf5ec0, searching parent scope 0x555b4adf1840\nDEBUG: Scope::lookupSymbol searching for 'T' in scope 0x555b4adf1840 (type: 4)\nDEBUG: Found symbol 'T' in scope 0x555b4adf1840\nDEBUG: Found 'T' in parent hierarchy\nDEBUG: resolveType looking up 'T': found\nDEBUG: Symbol kind: 10\nDEBUG: Symbol type: T\nDEBUG: Symbol type kind: 23\nDEBUG: resolveType returning resolved type: T (kind: 23)\nDEBUG: MethodDeclaration resolved parameter 'val' type: T\nDEBUG: MethodDeclaration parameter type kind: 23\nDEBUG: declareSymbol called for: val (kind: 0)\nDEBUG: Symbol successfully declared: val\nDEBUG: SymbolTable::lookupSymbol searching for 'SimpleGeneric' starting from scope 0x555b4adf6100\nDEBUG: Scope::lookupSymbol searching for 'SimpleGeneric' in scope 0x555b4adf6100 (type: 3)\nDEBUG: Symbol not found in scope 0x555b4adf6100, searching parent scope 0x555b4adf5ec0\nDEBUG: Scope::lookupSymbol searching for 'SimpleGeneric' in scope 0x555b4adf5ec0 (type: 2)\nDEBUG: Symbol not found in scope 0x555b4adf5ec0, searching parent scope 0x555b4adf1840\nDEBUG: Scope::lookupSymbol searching for 'SimpleGeneric' in scope 0x555b4adf1840 (type: 4)\nDEBUG: Symbol not found in scope 0x555b4adf1840, searching parent scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for 'SimpleGeneric' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol 'SimpleGeneric' in scope 0x555b4aa760b0\nDEBUG: Found 'SimpleGeneric' in parent hierarchy\nDEBUG: SymbolTable::lookupSymbol searching for 'val' starting from scope 0x555b4adf6100\nDEBUG: Scope::lookupSymbol searching for 'val' in scope 0x555b4adf6100 (type: 3)\nDEBUG: Symbol not found in scope 0x555b4adf6100, searching parent scope 0x555b4adf5ec0\nDEBUG: Scope::lookupSymbol searching for 'val' in scope 0x555b4adf5ec0 (type: 2)\nDEBUG: Found symbol 'val' in scope 0x555b4adf5ec0\nDEBUG: Found 'val' in parent hierarchy\nDEBUG: declareSymbol called for: constructor (kind: 9)\nDEBUG: Symbol successfully declared: constructor\nDEBUG: Added constructor to class scope\nDEBUG: ClassDeclaration processing 1 methods\nDEBUG: Processing method: getValue\nDEBUG: SymbolTable::lookupSymbol searching for 'SimpleGeneric' starting from scope 0x555b4adf6570\nDEBUG: Scope::lookupSymbol searching for 'SimpleGeneric' in scope 0x555b4adf6570 (type: 3)\nDEBUG: Symbol not found in scope 0x555b4adf6570, searching parent scope 0x555b4adf64c0\nDEBUG: Scope::lookupSymbol searching for 'SimpleGeneric' in scope 0x555b4adf64c0 (type: 2)\nDEBUG: Symbol not found in scope 0x555b4adf64c0, searching parent scope 0x555b4adf1840\nDEBUG: Scope::lookupSymbol searching for 'SimpleGeneric' in scope 0x555b4adf1840 (type: 4)\nDEBUG: Symbol not found in scope 0x555b4adf1840, searching parent scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for 'SimpleGeneric' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol 'SimpleGeneric' in scope 0x555b4aa760b0\nDEBUG: Found 'SimpleGeneric' in parent hierarchy\nDEBUG: Method processed successfully\nDEBUG: declareSymbol called for: getValue (kind: 9)\nDEBUG: Symbol successfully declared: getValue\n\ud83d\udd0d Validating RAII patterns for class: SimpleGeneric\n\ud83d\udd0d Analyzing resource ownership for class: SimpleGeneric\n   - Property 'value' type: T\n     - Value type or primitive\n\u2705 Resource ownership analysis completed\n\ud83d\udd0d Detecting potential resource leaks in class: SimpleGeneric\n\u2705 Resource leak detection completed\n\u2705 RAII pattern validation completed for: SimpleGeneric\n\ud83d\udca1 Suggesting resource cleanup for class: SimpleGeneric\n\u2705 Resource cleanup suggestions completed\nDEBUG: ClassDeclaration found constructor method\nDEBUG: SemanticAnalyzer::visit(NewExpression) called for: new SimpleGeneric(42.000000)\nDEBUG: hasExplicitTypeArguments: true\nDEBUG: NewExpression - analyzing 1 arguments\nDEBUG: NewExpression - analyzing argument\nDEBUG: NewExpression - argument analyzed\nDEBUG: Constructor identifier: SimpleGeneric\nDEBUG: NewExpression - resolving symbol: SimpleGeneric\nDEBUG: SymbolTable::lookupSymbol searching for 'SimpleGeneric' starting from scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for 'SimpleGeneric' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol 'SimpleGeneric' in scope 0x555b4aa760b0\nDEBUG: Found 'SimpleGeneric' in parent hierarchy\nDEBUG: NewExpression - symbol resolved: found\nDEBUG: NewExpression - symbol kind: 3\nDEBUG: Class type: SimpleGeneric, kind: 22\nDEBUG: Processing explicit type arguments\nDEBUG: Number of type arguments: 1\nDEBUG: Resolving type argument: number\nDEBUG: Resolved to: number, kind: 0\nDEBUG: NewExpression - validating generic instantiation\nDEBUG: NewExpression - constraint validation passed\nDEBUG: Created GenericType: SimpleGeneric<number>, kind: 24\nDEBUG: Adding variable instance with type: SimpleGeneric<number>\nDEBUG: Current scope when adding variable: 0x555b4aa760b0\nDEBUG: Scope hierarchy when adding variable instance:\n  Level 0: 0x555b4aa760b0 (type: 0, name: global)\nDEBUG: SymbolTable::lookupSymbol searching for 'instance' starting from scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for 'instance' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol 'instance' in scope 0x555b4aa760b0\nDEBUG: Found 'instance' in parent hierarchy\nDEBUG: Adding variable result with type: any\nDEBUG: Current scope when adding variable: 0x555b4aa760b0\nDEBUG: Scope hierarchy when adding variable result:\n  Level 0: 0x555b4aa760b0 (type: 0, name: global)\nDEBUG: SymbolTable::lookupSymbol searching for '_print' starting from scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for '_print' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol '_print' in scope 0x555b4aa760b0\nDEBUG: Found '_print' in parent hierarchy\nDEBUG: SymbolTable::lookupSymbol searching for 'result' starting from scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for 'result' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol 'result' in scope 0x555b4aa760b0\nDEBUG: Found 'result' in parent hierarchy\nDEBUG: SymbolTable::lookupSymbol searching for '_print' starting from scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for '_print' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol '_print' in scope 0x555b4aa760b0\nDEBUG: Found '_print' in parent hierarchy\nDEBUG: Checking argument 0: string vs parameter: any\nDEBUG: Argument type kind: 1, Parameter type kind: 7\nDEBUG: Checking argument 1: any vs parameter: any\nDEBUG: Argument type kind: 7, Parameter type kind: 7\nDEBUG: SymbolTable::lookupSymbol searching for '_print' starting from scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for '_print' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol '_print' in scope 0x555b4aa760b0\nDEBUG: Found '_print' in parent hierarchy\nDEBUG: *** module.accept(*this) COMPLETED ***\n[3] Starting code generation\nDEBUG: LLVMCodeGen received SymbolTable at address: 0x555b4ab559e0\nDEBUG: Module statement type: N3tsc16ClassDeclarationE\nDEBUG: Adding ClassDeclaration to classDecls\nDEBUG: Module statement type: N3tsc19VariableDeclarationE\nDEBUG: Adding statement to moduleStatements\nDEBUG: Module statement type: N3tsc19VariableDeclarationE\nDEBUG: Adding statement to moduleStatements\nDEBUG: Module statement type: N3tsc19ExpressionStatementE\nDEBUG: Adding statement to moduleStatements\nDEBUG: Processing 1 class declarations\nDEBUG: Processing ClassDeclaration separately\nDEBUG: Skipping method generation for generic class: SimpleGeneric\nDEBUG: Checking main function generation: moduleStatements=3, mainExists=false, generateMainFunction=true\nDEBUG: MAIN - Creating main function\nDEBUG: MAIN - About to enter main function context\nDEBUG: CONTEXT - Entering function: main\nDEBUG: MAIN - Processing 2 variable declarations first\nDEBUG: MAIN - Processing variable declaration in main function\nDEBUG: MAIN - Current function context: DEBUG: CONTEXT - Current function: main\nDEBUG: CONTEXT - Current function: main\nmain\nDEBUG: VariableDeclaration visitor called for variable: instance\nDEBUG: SymbolTable::lookupSymbol searching for 'instance' starting from scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for 'instance' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol 'instance' in scope 0x555b4aa760b0\nDEBUG: Found 'instance' in parent hierarchy\nDEBUG: createMonomorphizedStruct called for: SimpleGeneric<number>\nDEBUG: createMonomorphizedStruct - mangled name: SimpleGeneric_number\nDEBUG: createMonomorphizedStruct - classDecl found, processing properties\nDEBUG: createMonomorphizedStruct - processing 1 properties\nDEBUG: createMonomorphizedStruct - processing property 0: value\nDEBUG: createMonomorphizedStruct - property type: T, kind: 12\nDEBUG: createMonomorphizedStruct - substituted unresolved type T with number\nDEBUG: createMonomorphizedStruct - converting type to LLVM: number\nDEBUG: createMonomorphizedStruct - converted to LLVM type: valid\nDEBUG: createMonomorphizedStruct - creating struct with 1 members\nDEBUG: createMonomorphizedStruct - created struct successfully\nDEBUG: Variable instance using symbol table type: SimpleGeneric<number>\nDEBUG: CONTEXT - Current function: main\nDEBUG: *** NewExpression visitor called for: new SimpleGeneric(42.000000) ***\nDEBUG: Current insert point at start of NewExpression: 0x555b4adf7630\nDEBUG: Current block name at start of NewExpression: entry\nDEBUG: Current block parent function at start of NewExpression: main\nDEBUG: SymbolTable::lookupSymbol searching for 'SimpleGeneric' starting from scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for 'SimpleGeneric' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol 'SimpleGeneric' in scope 0x555b4aa760b0\nDEBUG: Found 'SimpleGeneric' in parent hierarchy\nDEBUG: Class symbol lookup for 'SimpleGeneric': found\nDEBUG: Class symbol kind: 3\nDEBUG: Class symbol has declaration: yes\nDEBUG: Class type: SimpleGeneric, kind: 22\nDEBUG: Processing explicit type arguments for generic class\nDEBUG: Number of type arguments: 1\nDEBUG: Created GenericType: SimpleGeneric<number>, kind: 24\nDEBUG: Creating monomorphized type for: SimpleGeneric<number>\nDEBUG: createMonomorphizedStruct called for: SimpleGeneric<number>\nDEBUG: createMonomorphizedStruct - mangled name: SimpleGeneric_number\nDEBUG: createMonomorphizedStruct - classDecl found, processing properties\nDEBUG: createMonomorphizedStruct - processing 1 properties\nDEBUG: createMonomorphizedStruct - processing property 0: value\nDEBUG: createMonomorphizedStruct - property type: T, kind: 12\nDEBUG: createMonomorphizedStruct - substituted unresolved type T with number\nDEBUG: createMonomorphizedStruct - converting type to LLVM: number\nDEBUG: createMonomorphizedStruct - converted to LLVM type: valid\nDEBUG: createMonomorphizedStruct - creating struct with 1 members\nDEBUG: createMonomorphizedStruct - created struct successfully\nDEBUG: Created monomorphized object type: valid\nDEBUG: Monomorphized object type == getAnyType(): false\nDEBUG: Generating monomorphized methods for: SimpleGeneric<number>\nDEBUG: Saved insert point before method generation\nDEBUG: generateMonomorphizedMethods called for: SimpleGeneric<number>\nDEBUG: Found class declaration with 1 methods\nDEBUG: Generating method: SimpleGeneric_number_getValue\nDEBUG: createMonomorphizedStruct called for: SimpleGeneric<number>\nDEBUG: createMonomorphizedStruct - mangled name: SimpleGeneric_number\nDEBUG: createMonomorphizedStruct - classDecl found, processing properties\nDEBUG: createMonomorphizedStruct - processing 1 properties\nDEBUG: createMonomorphizedStruct - processing property 0: value\nDEBUG: createMonomorphizedStruct - property type: T, kind: 12\nDEBUG: createMonomorphizedStruct - substituted unresolved type T with number\nDEBUG: createMonomorphizedStruct - converting type to LLVM: number\nDEBUG: createMonomorphizedStruct - converted to LLVM type: valid\nDEBUG: createMonomorphizedStruct - creating struct with 1 members\nDEBUG: createMonomorphizedStruct - created struct successfully\nDEBUG: Created entry block 0x555b4adf85e0 for function SimpleGeneric_number_getValue\nDEBUG: CONTEXT - Entering function: SimpleGeneric_number_getValue\nDEBUG: Entered scope for monomorphized method: SimpleGeneric_number_getValue\nDEBUG: Setting up parameters for method: SimpleGeneric_number_getValue\nDEBUG: Method is static: NO\nDEBUG: Number of parameters: 0\nDEBUG: Function has 1 arguments\nDEBUG: Skipping 'this' parameter\nDEBUG: Generating method body for: SimpleGeneric_number_getValue\nDEBUG: LLVMCodeGen processing block with current scope: 0x555b4aa760b0\nDEBUG: CONTEXT - Current function: SimpleGeneric_number_getValue\nDEBUG: PROP - PropertyAccess visitor called for property: value\nDEBUG: PROP - Current function context: DEBUG: CONTEXT - Current function: SimpleGeneric_number_getValue\nDEBUG: CONTEXT - Current function: SimpleGeneric_number_getValue\nSimpleGeneric_number_getValue\nDEBUG: PropertyAccess - object type: present\nDEBUG: PropertyAccess - object class: N3tsc14ThisExpressionE\nDEBUG: PropertyAccess - Checking for ThisExpression, object type: N3tsc14ThisExpressionE\nDEBUG: PropertyAccess - Handling ThisExpression: value\nDEBUG: PropertyAccess - Property access on 'this': value\nDEBUG: PropertyAccess - Property 'value' not handled yet\nDEBUG: LLVMCodeGen finished processing block with current scope: 0x555b4aa760b0\nDEBUG: Method body generation completed for: SimpleGeneric_number_getValue\nDEBUG: Current block has terminator: YES\nDEBUG: Checking all basic blocks in function SimpleGeneric_number_getValue\nDEBUG: Block 0x555b4adf85e0 name: entry has terminator: YES\nDEBUG: Block 0x555b4adf85e0 terminator type: ret\nDEBUG: Double-checking all basic blocks in function SimpleGeneric_number_getValue\nDEBUG: Block 0x555b4adf85e0 has terminator: YES\nDEBUG: Insert block before return check: present\nDEBUG: Insert block has terminator: YES\nDEBUG: Method already has terminator: SimpleGeneric_number_getValue\nDEBUG: CONTEXT - Exiting function: SimpleGeneric_number_getValue\nDEBUG: Generating constructor: SimpleGeneric_number_constructor\nDEBUG: createMonomorphizedStruct called for: SimpleGeneric<number>\nDEBUG: createMonomorphizedStruct - mangled name: SimpleGeneric_number\nDEBUG: createMonomorphizedStruct - classDecl found, processing properties\nDEBUG: createMonomorphizedStruct - processing 1 properties\nDEBUG: createMonomorphizedStruct - processing property 0: value\nDEBUG: createMonomorphizedStruct - property type: T, kind: 12\nDEBUG: createMonomorphizedStruct - substituted unresolved type T with number\nDEBUG: createMonomorphizedStruct - converting type to LLVM: number\nDEBUG: createMonomorphizedStruct - converted to LLVM type: valid\nDEBUG: createMonomorphizedStruct - creating struct with 1 members\nDEBUG: createMonomorphizedStruct - created struct successfully\nDEBUG: Processing parameter: val, type: T\nDEBUG: Parameter type kind: 12\nDEBUG: Parameter type pointer: 0x555b4adf0530\nDEBUG: Parameter type use_count: 1\nDEBUG: Found type parameter: val\nDEBUG: Type parameter substitution: T -> number -> success\nDEBUG: Created entry block 0x555b4adf99a0 for function SimpleGeneric_number_constructor\nDEBUG: CONTEXT - Entering function: SimpleGeneric_number_constructor\nDEBUG: Entered scope for monomorphized method: SimpleGeneric_number_constructor\nDEBUG: Setting up parameters for method: SimpleGeneric_number_constructor\nDEBUG: Method is static: NO\nDEBUG: Number of parameters: 1\nDEBUG: Function has 2 arguments\nDEBUG: Skipping 'this' parameter\nDEBUG: Setting up parameter: val\nDEBUG: CONTEXT - Current function: SimpleGeneric_number_constructor\nDEBUG: Parameter val set up successfully\nDEBUG: Parameter val stored in symbol table: YES\nDEBUG: Generating method body for: SimpleGeneric_number_constructor\nDEBUG: LLVMCodeGen processing block with current scope: 0x555b4aa760b0\nDEBUG: ExpressionStatement visitor called\nDEBUG: AssignmentExpression visitor called\nDEBUG: Identifier visitor called for: val\nDEBUG: loadVariable called for: val\nDEBUG: loadVariable found storage for val: YES\nDEBUG: Storage type for val: 14\nDEBUG: CONTEXT - Current function: SimpleGeneric_number_constructor\nDEBUG: Checking if storage is GlobalVariable for val\nDEBUG: Storage value: 0x555b4adf8770\nDEBUG: Storage is not a GlobalVariable for val\nDEBUG: Storage type name: 14\nDEBUG: AssignmentExpression right-hand side value: found\nDEBUG: PropertyAssignment - property: value\nDEBUG: PropertyAssignment - unknown property: value\nDEBUG: LLVMCodeGen finished processing block with current scope: 0x555b4aa760b0\nDEBUG: Method body generation completed for: SimpleGeneric_number_constructor\nDEBUG: Current block has terminator: NO\nDEBUG: Checking all basic blocks in function SimpleGeneric_number_constructor\nDEBUG: Block 0x555b4adf99a0 name: entry has terminator: NO\nDEBUG: Adding terminator to block 0x555b4adf99a0 (name: entry)\nDEBUG: Added terminator to block 0x555b4adf99a0\nDEBUG: Double-checking all basic blocks in function SimpleGeneric_number_constructor\nDEBUG: Block 0x555b4adf99a0 has terminator: YES\nDEBUG: Insert block before return check: present\nDEBUG: Insert block has terminator: YES\nDEBUG: Method already has terminator: SimpleGeneric_number_constructor\nDEBUG: CONTEXT - Exiting function: SimpleGeneric_number_constructor\nDEBUG: Restored insert point after method generation\nDEBUG: Current block after restore: 0x555b4adf7630\nDEBUG: Current block name after restore: entry\nDEBUG: Current block parent function after restore: main\nDEBUG: NewExpression - objectType: valid\nDEBUG: NewExpression - objectType->isPointerTy(): false\nDEBUG: NewExpression - objectType->getTypeID(): 15\nDEBUG: NewExpression - objectType == getAnyType(): false\nDEBUG: Object type is pointer, using struct type { i32, ptr } for allocation\nDEBUG: Created pointeeType: valid\nDEBUG: pointeeType isStructTy(): true\nDEBUG: Using ARC allocation for type: SimpleGeneric\nDEBUG: ARC alloc function: created\nDEBUG: ARC allocating 16 bytes for struct type\nDEBUG: ARC allocation call created: success\nDEBUG: CONTEXT - Current function: main\nDEBUG: Calling constructor function: SimpleGeneric_number_constructor\nDEBUG: Constructor function call completed\nDEBUG: CONTEXT - Current function: main\nDEBUG: Variable instance allocated storage: YES\nDEBUG: Variable instance initValue: YES storage: YES\nDEBUG: CONTEXT - Current function: main\nDEBUG: Variable instance currentFunc: main\nDEBUG: Storing as local variable: instance\nDEBUG: MAIN - Processing variable declaration in main function\nDEBUG: MAIN - Current function context: DEBUG: CONTEXT - Current function: main\nDEBUG: CONTEXT - Current function: main\nmain\nDEBUG: VariableDeclaration visitor called for variable: result\nDEBUG: SymbolTable::lookupSymbol searching for 'result' starting from scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for 'result' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol 'result' in scope 0x555b4aa760b0\nDEBUG: Found 'result' in parent hierarchy\nDEBUG: Variable result using symbol table type: any\nDEBUG: CONTEXT - Current function: main\nDEBUG: CALL - CallExpression visitor called\nDEBUG: CALL - Current function context: DEBUG: CONTEXT - Current function: main\nDEBUG: CONTEXT - Current function: main\nmain\nDEBUG: CallExpression - Method call detected: getValue\nDEBUG: CallExpression - Number of arguments: 0\nDEBUG: PROP - PropertyAccess visitor called for property: getValue\nDEBUG: PROP - Current function context: DEBUG: CONTEXT - Current function: main\nDEBUG: CONTEXT - Current function: main\nmain\nDEBUG: PropertyAccess - object type: present\nDEBUG: PropertyAccess - object class: N3tsc10IdentifierE\nDEBUG: PropertyAccess - Checking for ThisExpression, object type: N3tsc10IdentifierE\nDEBUG: PropertyAccess - identifier name: instance, property: getValue\nDEBUG: SymbolTable::lookupSymbol searching for 'instance' starting from scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for 'instance' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol 'instance' in scope 0x555b4aa760b0\nDEBUG: Found 'instance' in parent hierarchy\nDEBUG: Identifier visitor called for: instance\nDEBUG: loadVariable called for: instance\nDEBUG: loadVariable found storage for instance: YES\nDEBUG: Storage type for instance: 14\nDEBUG: CONTEXT - Current function: main\nDEBUG: Checking if storage is GlobalVariable for instance\nDEBUG: Storage value: 0x555b4adfa560\nDEBUG: Storage is not a GlobalVariable for instance\nDEBUG: Storage type name: 14\nDEBUG: PropertyAccess - objectValue type: pointer\nDEBUG: PropertyAccess - current function: main\nDEBUG: PropertyAccess - property name: getValue\nDEBUG: PropertyAccess - Not entering struct field access. functionName: main, propertyName: getValue\nDEBUG: PropertyAccess - objectValue type: pointer\nDEBUG: PropertyAccess - objectValue type == getAnyType(): true\nDEBUG: SymbolTable::lookupSymbol searching for 'instance' starting from scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for 'instance' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol 'instance' in scope 0x555b4aa760b0\nDEBUG: Found 'instance' in parent hierarchy\nDEBUG: SymbolTable::lookupSymbol searching for 'instance' starting from scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for 'instance' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol 'instance' in scope 0x555b4aa760b0\nDEBUG: Found 'instance' in parent hierarchy\nDEBUG: Found symbol instance with type: SimpleGeneric<number>\nDEBUG: Generated mangled method name: SimpleGeneric_number_getValue\nDEBUG: Generic type property access - returning object instance\nDEBUG: CallExpression - Callee is PropertyAccess, property: getValue\nDEBUG: CallExpression - calleeValue type: 14\nDEBUG: CallExpression - calleeValue is Function: NO\nDEBUG: Identifier visitor called for: instance\nDEBUG: loadVariable called for: instance\nDEBUG: loadVariable found storage for instance: YES\nDEBUG: Storage type for instance: 14\nDEBUG: CONTEXT - Current function: main\nDEBUG: Checking if storage is GlobalVariable for instance\nDEBUG: Storage value: 0x555b4adfa560\nDEBUG: Storage is not a GlobalVariable for instance\nDEBUG: Storage type name: 14\nDEBUG: SymbolTable::lookupSymbol searching for 'instance' starting from scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for 'instance' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol 'instance' in scope 0x555b4aa760b0\nDEBUG: Found 'instance' in parent hierarchy\nDEBUG: CALL - Found generic method function: SimpleGeneric_number_getValue\nDEBUG: CallExpression - Processing generic method call with 0 arguments\nDEBUG: Identifier visitor called for: instance\nDEBUG: loadVariable called for: instance\nDEBUG: loadVariable found storage for instance: YES\nDEBUG: Storage type for instance: 14\nDEBUG: CONTEXT - Current function: main\nDEBUG: Checking if storage is GlobalVariable for instance\nDEBUG: Storage value: 0x555b4adfa560\nDEBUG: Storage is not a GlobalVariable for instance\nDEBUG: Storage type name: 14\nDEBUG: Created non-void generic method call to SimpleGeneric_number_getValue\nDEBUG: CONTEXT - Current function: main\nDEBUG: Variable result allocated storage: YES\nDEBUG: Variable result initValue: YES storage: YES\nDEBUG: CONTEXT - Current function: main\nDEBUG: Variable result currentFunc: main\nDEBUG: Storing as local variable: result\nDEBUG: Processing 0 deferred global initializations after variable declarations\nDEBUG: Processing 1 other statements after variable declarations\nDEBUG: Processing other statement in main function\nDEBUG: ExpressionStatement visitor called\nDEBUG: CALL - CallExpression visitor called\nDEBUG: CALL - Current function context: DEBUG: CONTEXT - Current function: main\nDEBUG: CONTEXT - Current function: main\nmain\nDEBUG: Identifier visitor called for: _print\nDEBUG: loadVariable called for: _print\nDEBUG: loadVariable found storage for _print: NO\nDEBUG: SymbolTable::lookupSymbol searching for '_print' starting from scope 0x555b4aa760b0\nDEBUG: Scope::lookupSymbol searching for '_print' in scope 0x555b4aa760b0 (type: 0)\nDEBUG: Found symbol '_print' in scope 0x555b4aa760b0\nDEBUG: Found '_print' in parent hierarchy\nDEBUG: Identifier - Found _print, creating function\nDEBUG: CallExpression - Callee is Identifier: _print\nDEBUG: CallExpression - Found _print, creating function\nDEBUG: Processing 2 arguments for function call\nDEBUG: Processing argument 0 of type N3tsc13StringLiteralE\nDEBUG: getStringType() returning type: 14\nDEBUG: Processing argument 1 of type N3tsc10IdentifierE\nDEBUG: Identifier visitor called for: result\nDEBUG: loadVariable called for: result\nDEBUG: loadVariable found storage for result: YES\nDEBUG: Storage type for result: 14\nDEBUG: CONTEXT - Current function: main\nDEBUG: Checking if storage is GlobalVariable for result\nDEBUG: Storage value: 0x555b4adfabb0\nDEBUG: Storage is not a GlobalVariable for result\nDEBUG: Storage type name: 14\nDEBUG: Created void function call to _print\nDEBUG: Function call generated in block: entry\nDEBUG: Processing 0 deferred constructor calls\nDEBUG: Processing 0 deferred method calls\nDEBUG: Checking terminator in main function\nDEBUG: Current block: 0x555b4adf7630\nDEBUG: Current block name: entry\nDEBUG: Current block parent function: main\nDEBUG: Current block has terminator: NO\nDEBUG: Checking all basic blocks in main function\nDEBUG: Block 0x555b4adf7630 has terminator: NO\nDEBUG: Adding terminator to block 0x555b4adf7630\nDEBUG: Added terminator to block 0x555b4adf7630\nDEBUG: CONTEXT - Exiting function: main\nDEBUG: Starting LLVM IR verification...\nDEBUG: Module has 5 functions\nDEBUG: Verification result: FAILED\nWARNING: LLVM IR verification failed, but continuing...\nWARNING: This may be due to unused external function declarations\nDEBUG: Attempting to create IR file...\nDEBUG: IR file created successfully, printing module...\nDEBUG: LLVM IR dumped to generated_ir.ll\nDEBUG: Attempting LLD linking first...\nDEBUG: LLD not available, falling back to system linker\nDEBUG: Using system linker: gcc\nDEBUG: Found runtime library at: build/libtsc_runtime.a\nExecutable generated: tests/unit/minimal_generic_test\n",
      "stderr": "'r600' is not a recognized processor for this target (ignoring processor)\n'r600' is not a recognized processor for this target (ignoring processor)\n'r600' is not a recognized processor for this target (ignoring processor)\n'r600' is not a recognized processor for this target (ignoring processor)\ntests/unit/minimal_generic_test.ts:2:6: warning: Unused SimpleGeneric: class of type SimpleGeneric [TS6001]\ntests/unit/minimal_generic_test.ts:9:13: warning: Unused getValue:  of type () => T [TS6001]\ntests/unit/minimal_generic_test.ts:9:13: warning: Unused constructor:  of type (val: T) => void [TS6001]\ntests/unit/minimal_generic_test.ts:3:10: warning: Unused value:  of type T [TS6001]\ntests/unit/minimal_generic_test.ts:2:23: warning: Unused T:  of type T [TS6001]\n\nCompilation summary: 5 warning(s)\n",
      "returncode": 0
    },
    "ir_validation": {
      "file": "tests/unit/minimal_generic_test.ts",
      "ir_validation": {
        "file_path": "generated_ir.ll",
        "is_valid": false,
        "functions": [
          {
            "name": "main",
            "return_type": "i32",
            "parameters": [],
            "is_variadic": false,
            "is_generic": false
          },
          {
            "name": "SimpleGeneric_number_getValue",
            "return_type": "double",
            "parameters": [
              "ptr %0"
            ],
            "is_variadic": false,
            "is_generic": true
          },
          {
            "name": "SimpleGeneric_number_constructor",
            "return_type": "void",
            "parameters": [
              "ptr %0",
              "double %1"
            ],
            "is_variadic": false,
            "is_generic": true
          }
        ],
        "call_sites": [
          {
            "function_name": "__tsc_alloc",
            "arguments": [
              "i64 16",
              "ptr null",
              "ptr null"
            ],
            "line_number": 14
          },
          {
            "function_name": "SimpleGeneric_number_getValue",
            "arguments": [
              "ptr %instance_val2"
            ],
            "line_number": 20
          }
        ],
        "errors": [
          "_print function not found"
        ],
        "warnings": [
          "Line 14: Call to undefined function '__tsc_alloc'"
        ]
      }
    },
    "overall_success": false
  },
  {
    "file": "tests/unit/generic_method_comprehensive_test.ts",
    "compilation": {
      "file": "tests/unit/generic_method_comprehensive_test.ts",
      "success": false,
      "stdout": "Detected host target triple: x86_64-pc-linux-gnu\nInitializing LLVM targets...\nSuccessfully initialized all LLVM targets\nDiscovering available targets from LLVM...\nDiscovered target: xtensa\nDiscovered target: m68k\nDiscovered target: xcore\nDiscovered target: x86-64\nDiscovered target: x86\nDiscovered target: wasm64\nDiscovered target: wasm32\nDiscovered target: ve\nDiscovered target: systemz\nDiscovered target: spirv\nDiscovered target: spirv64\nDiscovered target: spirv32\nDiscovered target: sparcel\nDiscovered target: sparcv9\nDiscovered target: sparc\nDiscovered target: riscv64\nDiscovered target: riscv32\nDiscovered target: ppc64le\nDiscovered target: ppc64\nDiscovered target: ppc32le\nDiscovered target: ppc32\nDiscovered target: nvptx64\nDiscovered target: nvptx\nDiscovered target: msp430\nDiscovered target: mips64el\nDiscovered target: mips64\nDiscovered target: mipsel\nDiscovered target: mips\nDiscovered target: loongarch64\nDiscovered target: loongarch32\nDiscovered target: lanai\nDiscovered target: hexagon\nDiscovered target: bpfeb\nDiscovered target: bpfel\nDiscovered target: bpf\nDiscovered target: avr\nDiscovered target: thumbeb\nDiscovered target: thumb\nDiscovered target: armeb\nDiscovered target: arm\nDiscovered target: amdgcn\nDiscovered target: r600\nDiscovered target: aarch64_32\nDiscovered target: aarch64_be\nDiscovered target: aarch64\nDiscovered target: arm64_32\nDiscovered target: arm64\nTarget registry initialized successfully with 47 targets\nSupported targets: 47/47\nDEBUG: Created ModuleSymbolManager\nDEBUG: SemanticAnalyzer created SymbolTable at address: 0x55de48f48a30\nDEBUG: Created Infinity global variable with linkage: 0\n[0] Starting lexical analysis\n[1] Starting syntax analysis\nDEBUG: Parser::parse() called with 831 tokens for file: tests/unit/generic_method_comprehensive_test.ts\nDEBUG: Parser::parseModule() called\nDEBUG: Starting parseModule loop, isAtEnd(): 0\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Parser found constructor method\nDEBUG: Parser parsed constructor with 2 parameters\nDEBUG: parseStatement() called\nDEBUG: Current token type: 35\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 35\nDEBUG: Current token type: 1\nDEBUG: Parser parsed constructor body\nDEBUG: Parser found method declaration: getValue\nDEBUG: parseStatement() called\nDEBUG: Current token type: 35\nDEBUG: Parser found method declaration: getName\nDEBUG: parseStatement() called\nDEBUG: Current token type: 35\nDEBUG: Parser found method declaration: setValue\nDEBUG: parseStatement() called\nDEBUG: Current token type: 35\nDEBUG: Current token type: 1\nDEBUG: Parser found method declaration: toString\nDEBUG: parseStatement() called\nDEBUG: Current token type: 6\nDEBUG: Current token type: 35\nDEBUG: Current token type: 35\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Parser found constructor method\nDEBUG: Parser parsed constructor with 2 parameters\nDEBUG: parseStatement() called\nDEBUG: Current token type: 35\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 35\nDEBUG: Current token type: 1\nDEBUG: Parser parsed constructor body\nDEBUG: Parser found method declaration: getFirst\nDEBUG: parseStatement() called\nDEBUG: Current token type: 35\nDEBUG: Parser found method declaration: getSecond\nDEBUG: parseStatement() called\nDEBUG: Current token type: 35\nDEBUG: Parser found method declaration: swap\nDEBUG: parseStatement() called\nDEBUG: Current token type: 31\nDEBUG: Current token type: 1\nDEBUG: Parser found type arguments in NewExpression\nDEBUG: Parsed 2 type arguments\nDEBUG: Current token type: 35\nDEBUG: Current token type: 35\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Parser found constructor method\nDEBUG: Parser parsed constructor with 1 parameters\nDEBUG: parseStatement() called\nDEBUG: Current token type: 35\nDEBUG: Current token type: 1\nDEBUG: Parser parsed constructor body\nDEBUG: Parser found method declaration: add\nDEBUG: parseStatement() called\nDEBUG: Current token type: 93\nDEBUG: Current token type: 35\nDEBUG: Current token type: 1\nDEBUG: parseStatement threw CompilerError\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 92\nDEBUG: parseStatement threw CompilerError\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 93\nDEBUG: Current token type: 35\nDEBUG: Current token type: 1\nDEBUG: parseStatement threw CompilerError\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 92\nDEBUG: parseStatement threw CompilerError\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 35\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 92\nDEBUG: parseStatement threw CompilerError\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(numberContainer)\nDEBUG: Current token type: 31\nDEBUG: Current token type: 1\nDEBUG: Parser found type arguments in NewExpression\nDEBUG: Parsed 1 type arguments\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(numberValue)\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(numberName)\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(newValue)\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(stringContainer)\nDEBUG: Current token type: 31\nDEBUG: Current token type: 1\nDEBUG: Parser found type arguments in NewExpression\nDEBUG: Parsed 1 type arguments\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(stringValue)\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(stringName)\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(pair)\nDEBUG: Current token type: 31\nDEBUG: Current token type: 1\nDEBUG: Parser found type arguments in NewExpression\nDEBUG: Parsed 2 type arguments\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(first)\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(second)\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(swapped)\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(swappedFirst)\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(swappedSecond)\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(calculator)\nDEBUG: Current token type: 31\nDEBUG: Current token type: 1\nDEBUG: Parser found type arguments in NewExpression\nDEBUG: Parsed 1 type arguments\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(sum)\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(product)\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(containerStr)\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(pairStr)\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(outer)\nDEBUG: Current token type: 31\nDEBUG: Current token type: 1\nDEBUG: Parser found type arguments in NewExpression\nDEBUG: parseStatement threw CompilerError\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(inner)\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(innerValue)\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(innerName)\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(updatedInnerValue)\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 92\nDEBUG: parseStatement threw CompilerError\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(containers)\nDEBUG: parseStatement threw CompilerError\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: parseStatement threw CompilerError\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: parseStatement threw CompilerError\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(container)\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(value)\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(name)\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 92\nDEBUG: parseStatement threw CompilerError\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\n",
      "stderr": "'r600' is not a recognized processor for this target (ignoring processor)\n'r600' is not a recognized processor for this target (ignoring processor)\n'r600' is not a recognized processor for this target (ignoring processor)\n'r600' is not a recognized processor for this target (ignoring processor)\ntests/unit/generic_method_comprehensive_test.ts:60:39: error: Expected ';' after return statement [TS1007]\ntests/unit/generic_method_comprehensive_test.ts:61:6: error: Unexpected token in expression [TS1007]\ntests/unit/generic_method_comprehensive_test.ts:61:6: error: Expected ';' after expression [TS1007]\ntests/unit/generic_method_comprehensive_test.ts:64:40: error: Expected ';' after return statement [TS1007]\ntests/unit/generic_method_comprehensive_test.ts:65:6: error: Unexpected token in expression [TS1007]\ntests/unit/generic_method_comprehensive_test.ts:65:6: error: Expected ';' after expression [TS1007]\ntests/unit/generic_method_comprehensive_test.ts:69:6: error: Unexpected token in expression [TS1007]\ntests/unit/generic_method_comprehensive_test.ts:69:6: error: Expected ';' after expression [TS1007]\ntests/unit/generic_method_comprehensive_test.ts:129:63: error: Expected '>' after generic type arguments [TS1007]\ntests/unit/generic_method_comprehensive_test.ts:145:2: error: Unexpected token in expression [TS1007]\ntests/unit/generic_method_comprehensive_test.ts:145:2: error: Expected ';' after expression [TS1007]\ntests/unit/generic_method_comprehensive_test.ts:149:46: error: Expected ';' after variable declaration [TS1007]\ntests/unit/generic_method_comprehensive_test.ts:155:36: error: Expected '>' after type arguments [TS1007]\ntests/unit/generic_method_comprehensive_test.ts:155:48: error: Expected ';' after expression [TS1007]\ntests/unit/generic_method_comprehensive_test.ts:161:6: error: Unexpected token in expression [TS1007]\ntests/unit/generic_method_comprehensive_test.ts:161:6: error: Expected ';' after expression [TS1007]\nCompilation failed: Syntax analysis failed\n\nCompilation summary: 16 error(s)\n",
      "returncode": 1
    },
    "ir_validation": null,
    "overall_success": false
  },
  {
    "file": "tests/unit/simple_class_test.ts",
    "compilation": {
      "file": "tests/unit/simple_class_test.ts",
      "success": true,
      "stdout": "Detected host target triple: x86_64-pc-linux-gnu\nInitializing LLVM targets...\nSuccessfully initialized all LLVM targets\nDiscovering available targets from LLVM...\nDiscovered target: xtensa\nDiscovered target: m68k\nDiscovered target: xcore\nDiscovered target: x86-64\nDiscovered target: x86\nDiscovered target: wasm64\nDiscovered target: wasm32\nDiscovered target: ve\nDiscovered target: systemz\nDiscovered target: spirv\nDiscovered target: spirv64\nDiscovered target: spirv32\nDiscovered target: sparcel\nDiscovered target: sparcv9\nDiscovered target: sparc\nDiscovered target: riscv64\nDiscovered target: riscv32\nDiscovered target: ppc64le\nDiscovered target: ppc64\nDiscovered target: ppc32le\nDiscovered target: ppc32\nDiscovered target: nvptx64\nDiscovered target: nvptx\nDiscovered target: msp430\nDiscovered target: mips64el\nDiscovered target: mips64\nDiscovered target: mipsel\nDiscovered target: mips\nDiscovered target: loongarch64\nDiscovered target: loongarch32\nDiscovered target: lanai\nDiscovered target: hexagon\nDiscovered target: bpfeb\nDiscovered target: bpfel\nDiscovered target: bpf\nDiscovered target: avr\nDiscovered target: thumbeb\nDiscovered target: thumb\nDiscovered target: armeb\nDiscovered target: arm\nDiscovered target: amdgcn\nDiscovered target: r600\nDiscovered target: aarch64_32\nDiscovered target: aarch64_be\nDiscovered target: aarch64\nDiscovered target: arm64_32\nDiscovered target: arm64\nTarget registry initialized successfully with 47 targets\nSupported targets: 47/47\nDEBUG: Created ModuleSymbolManager\nDEBUG: SemanticAnalyzer created SymbolTable at address: 0x55aef1db19e0\nDEBUG: Created Infinity global variable with linkage: 0\n[0] Starting lexical analysis\n[1] Starting syntax analysis\nDEBUG: Parser::parse() called with 60 tokens for file: tests/unit/simple_class_test.ts\nDEBUG: Parser::parseModule() called\nDEBUG: Starting parseModule loop, isAtEnd(): 0\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Parser found constructor method\nDEBUG: Parser parsed constructor with 1 parameters\nDEBUG: parseStatement() called\nDEBUG: Current token type: 35\nDEBUG: Current token type: 1\nDEBUG: Parser parsed constructor body\nDEBUG: Parser found method declaration: getValue\nDEBUG: parseStatement() called\nDEBUG: Current token type: 35\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(instance)\nDEBUG: Current token type: 31\nDEBUG: Current token type: 1\nDEBUG: Parser did not find type arguments in NewExpression\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: parseVariableStatement called, current token: Identifier(result)\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\n[2] Starting semantic analysis\nDEBUG: *** ANALYZE METHOD CALLED *** for module\nDEBUG: *** CALLING performSymbolResolution ***\nDEBUG: *** performSymbolResolution CALLED ***\nDEBUG: collectFunctionDeclarations found 4 statements\nDEBUG: Processing statement type: N3tsc16ClassDeclarationE\nDEBUG: declareSymbol called for: SimpleClass (kind: 3)\nDEBUG: Symbol successfully declared: SimpleClass\nDEBUG: Processing statement type: N3tsc19VariableDeclarationE\nDEBUG: Processing statement type: N3tsc19VariableDeclarationE\nDEBUG: Processing statement type: N3tsc19ExpressionStatementE\nDEBUG: *** CALLING module.accept(*this) ***\nDEBUG: SymbolTable::lookupSymbol searching for 'SimpleClass' starting from scope 0x55aef1cd20b0\nDEBUG: Scope::lookupSymbol searching for 'SimpleClass' in scope 0x55aef1cd20b0 (type: 0)\nDEBUG: Found symbol 'SimpleClass' in scope 0x55aef1cd20b0\nDEBUG: Found 'SimpleClass' in parent hierarchy\nDEBUG: ClassDeclaration - processing 1 properties\nDEBUG: Processing property: value\nDEBUG: Current scope when processing property: 0x55aef204fed0\nDEBUG: PropertyDeclaration resolving type: number\nDEBUG: PropertyDeclaration type kind: 0\nDEBUG: PropertyDeclaration resolved type: number\nDEBUG: PropertyDeclaration resolved type kind: 0\nDEBUG: Property processed successfully\nDEBUG: declareSymbol called for: value (kind: 8)\nDEBUG: Symbol successfully declared: value\nDEBUG: Processing constructor method\nDEBUG: MethodDeclaration resolved parameter 'val' type: number\nDEBUG: MethodDeclaration parameter type kind: 0\nDEBUG: declareSymbol called for: val (kind: 0)\nDEBUG: Symbol successfully declared: val\nDEBUG: SymbolTable::lookupSymbol searching for 'SimpleClass' starting from scope 0x55aef2050380\nDEBUG: Scope::lookupSymbol searching for 'SimpleClass' in scope 0x55aef2050380 (type: 3)\nDEBUG: Symbol not found in scope 0x55aef2050380, searching parent scope 0x55aef2050160\nDEBUG: Scope::lookupSymbol searching for 'SimpleClass' in scope 0x55aef2050160 (type: 2)\nDEBUG: Symbol not found in scope 0x55aef2050160, searching parent scope 0x55aef204fed0\nDEBUG: Scope::lookupSymbol searching for 'SimpleClass' in scope 0x55aef204fed0 (type: 4)\nDEBUG: Symbol not found in scope 0x55aef204fed0, searching parent scope 0x55aef1cd20b0\nDEBUG: Scope::lookupSymbol searching for 'SimpleClass' in scope 0x55aef1cd20b0 (type: 0)\nDEBUG: Found symbol 'SimpleClass' in scope 0x55aef1cd20b0\nDEBUG: Found 'SimpleClass' in parent hierarchy\nDEBUG: SymbolTable::lookupSymbol searching for 'val' starting from scope 0x55aef2050380\nDEBUG: Scope::lookupSymbol searching for 'val' in scope 0x55aef2050380 (type: 3)\nDEBUG: Symbol not found in scope 0x55aef2050380, searching parent scope 0x55aef2050160\nDEBUG: Scope::lookupSymbol searching for 'val' in scope 0x55aef2050160 (type: 2)\nDEBUG: Found symbol 'val' in scope 0x55aef2050160\nDEBUG: Found 'val' in parent hierarchy\nDEBUG: declareSymbol called for: constructor (kind: 9)\nDEBUG: Symbol successfully declared: constructor\nDEBUG: Added constructor to class scope\nDEBUG: ClassDeclaration processing 1 methods\nDEBUG: Processing method: getValue\nDEBUG: SymbolTable::lookupSymbol searching for 'SimpleClass' starting from scope 0x55aef20507f0\nDEBUG: Scope::lookupSymbol searching for 'SimpleClass' in scope 0x55aef20507f0 (type: 3)\nDEBUG: Symbol not found in scope 0x55aef20507f0, searching parent scope 0x55aef2050740\nDEBUG: Scope::lookupSymbol searching for 'SimpleClass' in scope 0x55aef2050740 (type: 2)\nDEBUG: Symbol not found in scope 0x55aef2050740, searching parent scope 0x55aef204fed0\nDEBUG: Scope::lookupSymbol searching for 'SimpleClass' in scope 0x55aef204fed0 (type: 4)\nDEBUG: Symbol not found in scope 0x55aef204fed0, searching parent scope 0x55aef1cd20b0\nDEBUG: Scope::lookupSymbol searching for 'SimpleClass' in scope 0x55aef1cd20b0 (type: 0)\nDEBUG: Found symbol 'SimpleClass' in scope 0x55aef1cd20b0\nDEBUG: Found 'SimpleClass' in parent hierarchy\nDEBUG: Method processed successfully\nDEBUG: declareSymbol called for: getValue (kind: 9)\nDEBUG: Symbol successfully declared: getValue\n\ud83d\udd0d Validating RAII patterns for class: SimpleClass\n\ud83d\udd0d Analyzing resource ownership for class: SimpleClass\n   - Property 'value' type: number\n     - Value type or primitive\n\u2705 Resource ownership analysis completed\n\ud83d\udd0d Detecting potential resource leaks in class: SimpleClass\n\u2705 Resource leak detection completed\n\u2705 RAII pattern validation completed for: SimpleClass\n\ud83d\udca1 Suggesting resource cleanup for class: SimpleClass\n\u2705 Resource cleanup suggestions completed\nDEBUG: ClassDeclaration found constructor method\nDEBUG: SemanticAnalyzer::visit(NewExpression) called for: new SimpleClass(42.000000)\nDEBUG: hasExplicitTypeArguments: false\nDEBUG: NewExpression - analyzing 1 arguments\nDEBUG: NewExpression - analyzing argument\nDEBUG: NewExpression - argument analyzed\nDEBUG: Constructor identifier: SimpleClass\nDEBUG: NewExpression - resolving symbol: SimpleClass\nDEBUG: SymbolTable::lookupSymbol searching for 'SimpleClass' starting from scope 0x55aef1cd20b0\nDEBUG: Scope::lookupSymbol searching for 'SimpleClass' in scope 0x55aef1cd20b0 (type: 0)\nDEBUG: Found symbol 'SimpleClass' in scope 0x55aef1cd20b0\nDEBUG: Found 'SimpleClass' in parent hierarchy\nDEBUG: NewExpression - symbol resolved: found\nDEBUG: NewExpression - symbol kind: 3\nDEBUG: Class type: SimpleClass, kind: 22\nDEBUG: Adding variable instance with type: SimpleClass\nDEBUG: Current scope when adding variable: 0x55aef1cd20b0\nDEBUG: Scope hierarchy when adding variable instance:\n  Level 0: 0x55aef1cd20b0 (type: 0, name: global)\nDEBUG: SymbolTable::lookupSymbol searching for 'instance' starting from scope 0x55aef1cd20b0\nDEBUG: Scope::lookupSymbol searching for 'instance' in scope 0x55aef1cd20b0 (type: 0)\nDEBUG: Found symbol 'instance' in scope 0x55aef1cd20b0\nDEBUG: Found 'instance' in parent hierarchy\nDEBUG: Adding variable result with type: any\nDEBUG: Current scope when adding variable: 0x55aef1cd20b0\nDEBUG: Scope hierarchy when adding variable result:\n  Level 0: 0x55aef1cd20b0 (type: 0, name: global)\nDEBUG: SymbolTable::lookupSymbol searching for '_print' starting from scope 0x55aef1cd20b0\nDEBUG: Scope::lookupSymbol searching for '_print' in scope 0x55aef1cd20b0 (type: 0)\nDEBUG: Found symbol '_print' in scope 0x55aef1cd20b0\nDEBUG: Found '_print' in parent hierarchy\nDEBUG: SymbolTable::lookupSymbol searching for 'result' starting from scope 0x55aef1cd20b0\nDEBUG: Scope::lookupSymbol searching for 'result' in scope 0x55aef1cd20b0 (type: 0)\nDEBUG: Found symbol 'result' in scope 0x55aef1cd20b0\nDEBUG: Found 'result' in parent hierarchy\nDEBUG: SymbolTable::lookupSymbol searching for '_print' starting from scope 0x55aef1cd20b0\nDEBUG: Scope::lookupSymbol searching for '_print' in scope 0x55aef1cd20b0 (type: 0)\nDEBUG: Found symbol '_print' in scope 0x55aef1cd20b0\nDEBUG: Found '_print' in parent hierarchy\nDEBUG: Checking argument 0: string vs parameter: any\nDEBUG: Argument type kind: 1, Parameter type kind: 7\nDEBUG: Checking argument 1: any vs parameter: any\nDEBUG: Argument type kind: 7, Parameter type kind: 7\nDEBUG: SymbolTable::lookupSymbol searching for '_print' starting from scope 0x55aef1cd20b0\nDEBUG: Scope::lookupSymbol searching for '_print' in scope 0x55aef1cd20b0 (type: 0)\nDEBUG: Found symbol '_print' in scope 0x55aef1cd20b0\nDEBUG: Found '_print' in parent hierarchy\nDEBUG: *** module.accept(*this) COMPLETED ***\n[3] Starting code generation\nDEBUG: LLVMCodeGen received SymbolTable at address: 0x55aef1db19e0\nDEBUG: Module statement type: N3tsc16ClassDeclarationE\nDEBUG: Adding ClassDeclaration to classDecls\nDEBUG: Module statement type: N3tsc19VariableDeclarationE\nDEBUG: Adding statement to moduleStatements\nDEBUG: Module statement type: N3tsc19VariableDeclarationE\nDEBUG: Adding statement to moduleStatements\nDEBUG: Module statement type: N3tsc19ExpressionStatementE\nDEBUG: Adding statement to moduleStatements\nDEBUG: Processing 1 class declarations\nDEBUG: Processing ClassDeclaration separately\nDEBUG: METHOD - Starting method declaration: constructor\nDEBUG: METHOD - Current function context before method generation: DEBUG: CONTEXT - Current function: null\nnull\nMethod constructor return type: \nDEBUG: Generating method: SimpleClass_constructor\nDEBUG: CONTEXT - Entering function: SimpleClass_constructor\nDEBUG: CONTEXT - Current function: SimpleClass_constructor\nDEBUG: METHOD - About to process method body for: SimpleClass_constructor\nDEBUG: METHOD - Current function context before body processing: DEBUG: CONTEXT - Current function: SimpleClass_constructor\nDEBUG: CONTEXT - Current function: SimpleClass_constructor\nSimpleClass_constructor\nDEBUG: LLVMCodeGen processing block with current scope: 0x55aef1cd20b0\nDEBUG: ExpressionStatement visitor called\nDEBUG: AssignmentExpression visitor called\nDEBUG: Identifier visitor called for: val\nDEBUG: loadVariable called for: val\nDEBUG: loadVariable found storage for val: YES\nDEBUG: Storage type for val: 14\nDEBUG: CONTEXT - Current function: SimpleClass_constructor\nDEBUG: Checking if storage is GlobalVariable for val\nDEBUG: Storage value: 0x55aef2053320\nDEBUG: Storage is not a GlobalVariable for val\nDEBUG: Storage type name: 14\nDEBUG: AssignmentExpression right-hand side value: found\nDEBUG: PropertyAssignment - property: value\nDEBUG: PropertyAssignment - unknown property: value\nDEBUG: LLVMCodeGen finished processing block with current scope: 0x55aef1cd20b0\nDEBUG: METHOD - Finished processing method body for: SimpleClass_constructor\nDEBUG: METHOD - Current function context after body processing: DEBUG: CONTEXT - Current function: SimpleClass_constructor\nDEBUG: CONTEXT - Current function: SimpleClass_constructor\nSimpleClass_constructor\nDEBUG: CONTEXT - Exiting function: SimpleClass_constructor\nDEBUG: METHOD - Starting method declaration: getValue\nDEBUG: METHOD - Current function context before method generation: DEBUG: CONTEXT - Current function: null\nnull\nMethod getValue return type: \nDEBUG: Generating method: getValue\nDEBUG: CONTEXT - Entering function: getValue\nDEBUG: METHOD - About to process method body for: getValue\nDEBUG: METHOD - Current function context before body processing: DEBUG: CONTEXT - Current function: getValue\nDEBUG: CONTEXT - Current function: getValue\ngetValue\nDEBUG: LLVMCodeGen processing block with current scope: 0x55aef1cd20b0\nDEBUG: CONTEXT - Current function: getValue\nDEBUG: PROP - PropertyAccess visitor called for property: value\nDEBUG: PROP - Current function context: DEBUG: CONTEXT - Current function: getValue\nDEBUG: CONTEXT - Current function: getValue\ngetValue\nDEBUG: PropertyAccess - object type: present\nDEBUG: PropertyAccess - object class: N3tsc14ThisExpressionE\nDEBUG: PropertyAccess - Checking for ThisExpression, object type: N3tsc14ThisExpressionE\nDEBUG: PropertyAccess - Handling ThisExpression: value\nDEBUG: PropertyAccess - Property access on 'this': value\nDEBUG: PropertyAccess - Property 'value' not handled yet\nDEBUG: LLVMCodeGen finished processing block with current scope: 0x55aef1cd20b0\nDEBUG: METHOD - Finished processing method body for: getValue\nDEBUG: METHOD - Current function context after body processing: DEBUG: CONTEXT - Current function: getValue\nDEBUG: CONTEXT - Current function: getValue\ngetValue\nDEBUG: CONTEXT - Exiting function: getValue\nDEBUG: No destructor found for class: SimpleClass\nDEBUG: Checking main function generation: moduleStatements=3, mainExists=false, generateMainFunction=true\nDEBUG: MAIN - Creating main function\nDEBUG: MAIN - About to enter main function context\nDEBUG: CONTEXT - Entering function: main\nDEBUG: MAIN - Processing 2 variable declarations first\nDEBUG: MAIN - Processing variable declaration in main function\nDEBUG: MAIN - Current function context: DEBUG: CONTEXT - Current function: main\nDEBUG: CONTEXT - Current function: main\nmain\nDEBUG: VariableDeclaration visitor called for variable: instance\nDEBUG: SymbolTable::lookupSymbol searching for 'instance' starting from scope 0x55aef1cd20b0\nDEBUG: Scope::lookupSymbol searching for 'instance' in scope 0x55aef1cd20b0 (type: 0)\nDEBUG: Found symbol 'instance' in scope 0x55aef1cd20b0\nDEBUG: Found 'instance' in parent hierarchy\nDEBUG: Variable instance using symbol table type: SimpleClass\nDEBUG: CONTEXT - Current function: main\nDEBUG: *** NewExpression visitor called for: new SimpleClass(42.000000) ***\nDEBUG: Current insert point at start of NewExpression: 0x55aef2054780\nDEBUG: Current block name at start of NewExpression: entry\nDEBUG: Current block parent function at start of NewExpression: main\nDEBUG: SymbolTable::lookupSymbol searching for 'SimpleClass' starting from scope 0x55aef1cd20b0\nDEBUG: Scope::lookupSymbol searching for 'SimpleClass' in scope 0x55aef1cd20b0 (type: 0)\nDEBUG: Found symbol 'SimpleClass' in scope 0x55aef1cd20b0\nDEBUG: Found 'SimpleClass' in parent hierarchy\nDEBUG: Class symbol lookup for 'SimpleClass': found\nDEBUG: Class symbol kind: 3\nDEBUG: Class symbol has declaration: yes\nDEBUG: Class type: SimpleClass, kind: 22\nDEBUG: Mapped non-generic object type: valid\nDEBUG: Non-generic object type == getAnyType(): true\nDEBUG: NewExpression - objectType: valid\nDEBUG: NewExpression - objectType->isPointerTy(): true\nDEBUG: NewExpression - objectType->getTypeID(): 14\nDEBUG: NewExpression - objectType == getAnyType(): true\nDEBUG: Object type is pointer, using struct type { i32, ptr } for allocation\nDEBUG: Created pointeeType: valid\nDEBUG: pointeeType isStructTy(): true\nDEBUG: Using ARC allocation for type: SimpleClass\nDEBUG: ARC alloc function: created\nDEBUG: ARC allocating 16 bytes for struct type\nDEBUG: ARC allocation call created: success\nDEBUG: CONTEXT - Current function: main\nDEBUG: Calling constructor function: SimpleClass_constructor\nDEBUG: Constructor function call completed\nDEBUG: CONTEXT - Current function: main\nDEBUG: Variable instance allocated storage: YES\nDEBUG: Variable instance initValue: YES storage: YES\nDEBUG: CONTEXT - Current function: main\nDEBUG: Variable instance currentFunc: main\nDEBUG: Storing as local variable: instance\nDEBUG: Tracking ARC-managed object 'instance' (class: SimpleClass)\nDEBUG: Added ARC-managed object 'instance' (class: SimpleClass) to scope\nDEBUG: MAIN - Processing variable declaration in main function\nDEBUG: MAIN - Current function context: DEBUG: CONTEXT - Current function: main\nDEBUG: CONTEXT - Current function: main\nmain\nDEBUG: VariableDeclaration visitor called for variable: result\nDEBUG: SymbolTable::lookupSymbol searching for 'result' starting from scope 0x55aef1cd20b0\nDEBUG: Scope::lookupSymbol searching for 'result' in scope 0x55aef1cd20b0 (type: 0)\nDEBUG: Found symbol 'result' in scope 0x55aef1cd20b0\nDEBUG: Found 'result' in parent hierarchy\nDEBUG: Variable result using symbol table type: any\nDEBUG: CONTEXT - Current function: main\nDEBUG: CALL - CallExpression visitor called\nDEBUG: CALL - Current function context: DEBUG: CONTEXT - Current function: main\nDEBUG: CONTEXT - Current function: main\nmain\nDEBUG: CallExpression - Method call detected: getValue\nDEBUG: CallExpression - Number of arguments: 0\nDEBUG: PROP - PropertyAccess visitor called for property: getValue\nDEBUG: PROP - Current function context: DEBUG: CONTEXT - Current function: main\nDEBUG: CONTEXT - Current function: main\nmain\nDEBUG: PropertyAccess - object type: present\nDEBUG: PropertyAccess - object class: N3tsc10IdentifierE\nDEBUG: PropertyAccess - Checking for ThisExpression, object type: N3tsc10IdentifierE\nDEBUG: PropertyAccess - identifier name: instance, property: getValue\nDEBUG: SymbolTable::lookupSymbol searching for 'instance' starting from scope 0x55aef1cd20b0\nDEBUG: Scope::lookupSymbol searching for 'instance' in scope 0x55aef1cd20b0 (type: 0)\nDEBUG: Found symbol 'instance' in scope 0x55aef1cd20b0\nDEBUG: Found 'instance' in parent hierarchy\nDEBUG: Identifier visitor called for: instance\nDEBUG: loadVariable called for: instance\nDEBUG: loadVariable found storage for instance: YES\nDEBUG: Storage type for instance: 14\nDEBUG: CONTEXT - Current function: main\nDEBUG: Checking if storage is GlobalVariable for instance\nDEBUG: Storage value: 0x55aef2055250\nDEBUG: Storage is not a GlobalVariable for instance\nDEBUG: Storage type name: 14\nDEBUG: PropertyAccess - objectValue type: pointer\nDEBUG: PropertyAccess - current function: main\nDEBUG: PropertyAccess - property name: getValue\nDEBUG: PropertyAccess - Not entering struct field access. functionName: main, propertyName: getValue\nDEBUG: PropertyAccess - objectValue type: pointer\nDEBUG: PropertyAccess - objectValue type == getAnyType(): true\nDEBUG: SymbolTable::lookupSymbol searching for 'instance' starting from scope 0x55aef1cd20b0\nDEBUG: Scope::lookupSymbol searching for 'instance' in scope 0x55aef1cd20b0 (type: 0)\nDEBUG: Found symbol 'instance' in scope 0x55aef1cd20b0\nDEBUG: Found 'instance' in parent hierarchy\nDEBUG: PropertyAccess - Handling non-generic class property access: getValue\nDEBUG: PropertyAccess - Found method: getValue\nDEBUG: CallExpression - Callee is PropertyAccess, property: getValue\nDEBUG: CallExpression - calleeValue type: 14\nDEBUG: CallExpression - calleeValue is Function: YES\nDEBUG: CallExpression - Using method function from PropertyAccess: getValue\nDEBUG: Identifier visitor called for: instance\nDEBUG: loadVariable called for: instance\nDEBUG: loadVariable found storage for instance: YES\nDEBUG: Storage type for instance: 14\nDEBUG: CONTEXT - Current function: main\nDEBUG: Checking if storage is GlobalVariable for instance\nDEBUG: Storage value: 0x55aef2055250\nDEBUG: Storage is not a GlobalVariable for instance\nDEBUG: Storage type name: 14\nDEBUG: Identifier visitor called for: instance\nDEBUG: loadVariable called for: instance\nDEBUG: loadVariable found storage for instance: YES\nDEBUG: Storage type for instance: 14\nDEBUG: CONTEXT - Current function: main\nDEBUG: Checking if storage is GlobalVariable for instance\nDEBUG: Storage value: 0x55aef2055250\nDEBUG: Storage is not a GlobalVariable for instance\nDEBUG: Storage type name: 14\nDEBUG: Identifier visitor called for: instance\nDEBUG: loadVariable called for: instance\nDEBUG: loadVariable found storage for instance: YES\nDEBUG: Storage type for instance: 14\nDEBUG: CONTEXT - Current function: main\nDEBUG: Checking if storage is GlobalVariable for instance\nDEBUG: Storage value: 0x55aef2055250\nDEBUG: Storage is not a GlobalVariable for instance\nDEBUG: Storage type name: 14\nDEBUG: Prepended object instance as first argument for method call\nDEBUG: Created non-void function call to getValue\nDEBUG: Function call generated in block: entry\nDEBUG: CONTEXT - Current function: main\nDEBUG: Variable result allocated storage: YES\nDEBUG: Variable result initValue: YES storage: YES\nDEBUG: CONTEXT - Current function: main\nDEBUG: Variable result currentFunc: main\nDEBUG: Storing as local variable: result\nDEBUG: Processing 0 deferred global initializations after variable declarations\nDEBUG: Processing 1 other statements after variable declarations\nDEBUG: Processing other statement in main function\nDEBUG: ExpressionStatement visitor called\nDEBUG: CALL - CallExpression visitor called\nDEBUG: CALL - Current function context: DEBUG: CONTEXT - Current function: main\nDEBUG: CONTEXT - Current function: main\nmain\nDEBUG: Identifier visitor called for: _print\nDEBUG: loadVariable called for: _print\nDEBUG: loadVariable found storage for _print: NO\nDEBUG: SymbolTable::lookupSymbol searching for '_print' starting from scope 0x55aef1cd20b0\nDEBUG: Scope::lookupSymbol searching for '_print' in scope 0x55aef1cd20b0 (type: 0)\nDEBUG: Found symbol '_print' in scope 0x55aef1cd20b0\nDEBUG: Found '_print' in parent hierarchy\nDEBUG: Identifier - Found _print, creating function\nDEBUG: CallExpression - Callee is Identifier: _print\nDEBUG: CallExpression - Found _print, creating function\nDEBUG: Processing 2 arguments for function call\nDEBUG: Processing argument 0 of type N3tsc13StringLiteralE\nDEBUG: getStringType() returning type: 14\nDEBUG: Processing argument 1 of type N3tsc10IdentifierE\nDEBUG: Identifier visitor called for: result\nDEBUG: loadVariable called for: result\nDEBUG: loadVariable found storage for result: YES\nDEBUG: Storage type for result: 14\nDEBUG: CONTEXT - Current function: main\nDEBUG: Checking if storage is GlobalVariable for result\nDEBUG: Storage value: 0x55aef20557c0\nDEBUG: Storage is not a GlobalVariable for result\nDEBUG: Storage type name: 14\nDEBUG: Created void function call to _print\nDEBUG: Function call generated in block: entry\nDEBUG: Processing 0 deferred constructor calls\nDEBUG: Processing 0 deferred method calls\nDEBUG: Checking terminator in main function\nDEBUG: Current block: 0x55aef2054780\nDEBUG: Current block name: entry\nDEBUG: Current block parent function: main\nDEBUG: Current block has terminator: NO\nDEBUG: Checking all basic blocks in main function\nDEBUG: Block 0x55aef2054780 has terminator: NO\nDEBUG: Adding terminator to block 0x55aef2054780\nDEBUG: Added terminator to block 0x55aef2054780\nDEBUG: CONTEXT - Exiting function: main\nDEBUG: Starting LLVM IR verification...\nDEBUG: Module has 5 functions\nDEBUG: Verification result: FAILED\nWARNING: LLVM IR verification failed, but continuing...\nWARNING: This may be due to unused external function declarations\nDEBUG: Attempting to create IR file...\nDEBUG: IR file created successfully, printing module...\nDEBUG: LLVM IR dumped to generated_ir.ll\nDEBUG: Attempting LLD linking first...\nDEBUG: LLD not available, falling back to system linker\nDEBUG: Using system linker: gcc\nDEBUG: Found runtime library at: build/libtsc_runtime.a\nExecutable generated: tests/unit/simple_class_test\nvoiddouble",
      "stderr": "'r600' is not a recognized processor for this target (ignoring processor)\n'r600' is not a recognized processor for this target (ignoring processor)\n'r600' is not a recognized processor for this target (ignoring processor)\n'r600' is not a recognized processor for this target (ignoring processor)\ntests/unit/simple_class_test.ts:2:6: warning: Unused SimpleClass: class of type SimpleClass [TS6001]\ntests/unit/simple_class_test.ts:9:13: warning: Unused getValue:  of type () => number [TS6001]\ntests/unit/simple_class_test.ts:9:13: warning: Unused constructor:  of type (val: number) => void [TS6001]\ntests/unit/simple_class_test.ts:3:10: warning: Unused value:  of type number [TS6001]\n\nCompilation summary: 4 warning(s)\n",
      "returncode": 0
    },
    "ir_validation": {
      "file": "tests/unit/simple_class_test.ts",
      "ir_validation": {
        "file_path": "generated_ir.ll",
        "is_valid": false,
        "functions": [
          {
            "name": "SimpleClass_constructor",
            "return_type": "void",
            "parameters": [
              "ptr %0",
              "double %1"
            ],
            "is_variadic": false,
            "is_generic": false
          },
          {
            "name": "getValue",
            "return_type": "double",
            "parameters": [
              "ptr %0"
            ],
            "is_variadic": false,
            "is_generic": false
          },
          {
            "name": "main",
            "return_type": "i32",
            "parameters": [],
            "is_variadic": false,
            "is_generic": false
          }
        ],
        "call_sites": [
          {
            "function_name": "__tsc_alloc",
            "arguments": [
              "i64 16",
              "ptr null",
              "ptr null"
            ],
            "line_number": 27
          },
          {
            "function_name": "getValue",
            "arguments": [
              "ptr %instance_val3"
            ],
            "line_number": 34
          }
        ],
        "errors": [
          "_print function not found"
        ],
        "warnings": [
          "Line 27: Call to undefined function '__tsc_alloc'"
        ]
      }
    },
    "overall_success": false
  },
  {
    "file": "tests/unit/ultra_simple_test.ts",
    "compilation": {
      "file": "tests/unit/ultra_simple_test.ts",
      "success": true,
      "stdout": "Detected host target triple: x86_64-pc-linux-gnu\nInitializing LLVM targets...\nSuccessfully initialized all LLVM targets\nDiscovering available targets from LLVM...\nDiscovered target: xtensa\nDiscovered target: m68k\nDiscovered target: xcore\nDiscovered target: x86-64\nDiscovered target: x86\nDiscovered target: wasm64\nDiscovered target: wasm32\nDiscovered target: ve\nDiscovered target: systemz\nDiscovered target: spirv\nDiscovered target: spirv64\nDiscovered target: spirv32\nDiscovered target: sparcel\nDiscovered target: sparcv9\nDiscovered target: sparc\nDiscovered target: riscv64\nDiscovered target: riscv32\nDiscovered target: ppc64le\nDiscovered target: ppc64\nDiscovered target: ppc32le\nDiscovered target: ppc32\nDiscovered target: nvptx64\nDiscovered target: nvptx\nDiscovered target: msp430\nDiscovered target: mips64el\nDiscovered target: mips64\nDiscovered target: mipsel\nDiscovered target: mips\nDiscovered target: loongarch64\nDiscovered target: loongarch32\nDiscovered target: lanai\nDiscovered target: hexagon\nDiscovered target: bpfeb\nDiscovered target: bpfel\nDiscovered target: bpf\nDiscovered target: avr\nDiscovered target: thumbeb\nDiscovered target: thumb\nDiscovered target: armeb\nDiscovered target: arm\nDiscovered target: amdgcn\nDiscovered target: r600\nDiscovered target: aarch64_32\nDiscovered target: aarch64_be\nDiscovered target: aarch64\nDiscovered target: arm64_32\nDiscovered target: arm64\nTarget registry initialized successfully with 47 targets\nSupported targets: 47/47\nDEBUG: Created ModuleSymbolManager\nDEBUG: SemanticAnalyzer created SymbolTable at address: 0x562f52a8d9e0\nDEBUG: Created Infinity global variable with linkage: 0\n[0] Starting lexical analysis\n[1] Starting syntax analysis\nDEBUG: Parser::parse() called with 6 tokens for file: tests/unit/ultra_simple_test.ts\nDEBUG: Parser::parseModule() called\nDEBUG: Starting parseModule loop, isAtEnd(): 0\nDEBUG: parseModule loop iteration, calling parseStatement()\nDEBUG: parseStatement() called\nDEBUG: Current token type: 1\nDEBUG: parseStatement returned a statement\n[2] Starting semantic analysis\nDEBUG: *** ANALYZE METHOD CALLED *** for module\nDEBUG: *** CALLING performSymbolResolution ***\nDEBUG: *** performSymbolResolution CALLED ***\nDEBUG: collectFunctionDeclarations found 1 statements\nDEBUG: Processing statement type: N3tsc19ExpressionStatementE\nDEBUG: *** CALLING module.accept(*this) ***\nDEBUG: SymbolTable::lookupSymbol searching for '_print' starting from scope 0x562f529ae0b0\nDEBUG: Scope::lookupSymbol searching for '_print' in scope 0x562f529ae0b0 (type: 0)\nDEBUG: Found symbol '_print' in scope 0x562f529ae0b0\nDEBUG: Found '_print' in parent hierarchy\nDEBUG: SymbolTable::lookupSymbol searching for '_print' starting from scope 0x562f529ae0b0\nDEBUG: Scope::lookupSymbol searching for '_print' in scope 0x562f529ae0b0 (type: 0)\nDEBUG: Found symbol '_print' in scope 0x562f529ae0b0\nDEBUG: Found '_print' in parent hierarchy\nDEBUG: Checking argument 0: string vs parameter: any\nDEBUG: Argument type kind: 1, Parameter type kind: 7\nDEBUG: SymbolTable::lookupSymbol searching for '_print' starting from scope 0x562f529ae0b0\nDEBUG: Scope::lookupSymbol searching for '_print' in scope 0x562f529ae0b0 (type: 0)\nDEBUG: Found symbol '_print' in scope 0x562f529ae0b0\nDEBUG: Found '_print' in parent hierarchy\nDEBUG: *** module.accept(*this) COMPLETED ***\n[3] Starting code generation\nDEBUG: LLVMCodeGen received SymbolTable at address: 0x562f52a8d9e0\nDEBUG: Module statement type: N3tsc19ExpressionStatementE\nDEBUG: Adding statement to moduleStatements\nDEBUG: Processing 0 class declarations\nDEBUG: Checking main function generation: moduleStatements=1, mainExists=false, generateMainFunction=true\nDEBUG: MAIN - Creating main function\nDEBUG: MAIN - About to enter main function context\nDEBUG: CONTEXT - Entering function: main\nDEBUG: MAIN - Processing 0 variable declarations first\nDEBUG: Processing 0 deferred global initializations after variable declarations\nDEBUG: Processing 1 other statements after variable declarations\nDEBUG: Processing other statement in main function\nDEBUG: ExpressionStatement visitor called\nDEBUG: CALL - CallExpression visitor called\nDEBUG: CALL - Current function context: DEBUG: CONTEXT - Current function: main\nDEBUG: CONTEXT - Current function: main\nmain\nDEBUG: Identifier visitor called for: _print\nDEBUG: loadVariable called for: _print\nDEBUG: loadVariable found storage for _print: NO\nDEBUG: SymbolTable::lookupSymbol searching for '_print' starting from scope 0x562f529ae0b0\nDEBUG: Scope::lookupSymbol searching for '_print' in scope 0x562f529ae0b0 (type: 0)\nDEBUG: Found symbol '_print' in scope 0x562f529ae0b0\nDEBUG: Found '_print' in parent hierarchy\nDEBUG: Identifier - Found _print, creating function\nDEBUG: CallExpression - Callee is Identifier: _print\nDEBUG: CallExpression - Found _print, creating function\nDEBUG: Processing 1 arguments for function call\nDEBUG: Processing argument 0 of type N3tsc13StringLiteralE\nDEBUG: getStringType() returning type: 14\nDEBUG: Created void function call to _print\nDEBUG: Function call generated in block: entry\nDEBUG: Processing 0 deferred constructor calls\nDEBUG: Processing 0 deferred method calls\nDEBUG: Checking terminator in main function\nDEBUG: Current block: 0x562f52d27c70\nDEBUG: Current block name: entry\nDEBUG: Current block parent function: main\nDEBUG: Current block has terminator: NO\nDEBUG: Checking all basic blocks in main function\nDEBUG: Block 0x562f52d27c70 has terminator: NO\nDEBUG: Adding terminator to block 0x562f52d27c70\nDEBUG: Added terminator to block 0x562f52d27c70\nDEBUG: CONTEXT - Exiting function: main\nDEBUG: Starting LLVM IR verification...\nDEBUG: Module has 2 functions\nDEBUG: Verification result: FAILED\nWARNING: LLVM IR verification failed, but continuing...\nWARNING: This may be due to unused external function declarations\nDEBUG: Attempting to create IR file...\nDEBUG: IR file created successfully, printing module...\nDEBUG: LLVM IR dumped to generated_ir.ll\nDEBUG: Attempting LLD linking first...\nDEBUG: LLD not available, falling back to system linker\nDEBUG: Using system linker: gcc\nDEBUG: Found runtime library at: build/libtsc_runtime.a\nExecutable generated: tests/unit/ultra_simple_test\n",
      "stderr": "'r600' is not a recognized processor for this target (ignoring processor)\n'r600' is not a recognized processor for this target (ignoring processor)\n'r600' is not a recognized processor for this target (ignoring processor)\n'r600' is not a recognized processor for this target (ignoring processor)\n",
      "returncode": 0
    },
    "ir_validation": {
      "file": "tests/unit/ultra_simple_test.ts",
      "ir_validation": {
        "file_path": "generated_ir.ll",
        "is_valid": false,
        "functions": [
          {
            "name": "main",
            "return_type": "i32",
            "parameters": [],
            "is_variadic": false,
            "is_generic": false
          }
        ],
        "call_sites": [],
        "errors": [
          "_print function not found"
        ],
        "warnings": []
      }
    },
    "overall_success": false
  }
]